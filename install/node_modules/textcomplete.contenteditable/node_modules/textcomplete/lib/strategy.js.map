{"version":3,"sources":["../src/strategy.js"],"names":["DEFAULT_INDEX","DEFAULT_TEMPLATE","value","Strategy","props","cache","text","context","match","matchText","index","term","callback","searchWithCache","search","data","replace","results","template"],"mappings":";;;;;;;;AAEA;;;;;;;;AAGA,IAAMA,gBAAgB,CAAtB;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAOA,KAAP;AACD;;AAED;;;;;;AAgBA;;;IAGqBC,Q;AAInB,oBAAYC,KAAZ,EAAuC;AAAA;;AACrC,SAAKA,KAAL,GAAaA,KAAb;AACA,SAAKC,KAAL,GAAaD,MAAMC,KAAN,GAAc,EAAd,GAAmB,IAAhC;AACD;;AAED;;;;;;;8BAGU;AACR,WAAKA,KAAL,GAAa,IAAb;AACA,aAAO,IAAP;AACD;;AAED;;;;;;;;+BAKWC,I,EAAsB;AAC/B,UAAI,OAAO,KAAKF,KAAL,CAAWG,OAAlB,KAA8B,UAAlC,EAA8C;AAC5C,YAAMA,WAAU,KAAKH,KAAL,CAAWG,OAAX,CAAmBD,IAAnB,CAAhB;AACA,YAAI,OAAOC,QAAP,KAAmB,QAAvB,EAAiC;AAC/BD,iBAAOC,QAAP;AACD,SAFD,MAEO,IAAI,CAACA,QAAL,EAAc;AACnB,iBAAO,IAAP;AACD;AACF;AACD,UAAMC,QAAQ,KAAKC,SAAL,CAAeH,IAAf,CAAd;AACA,aAAOE,QAAQ,oBAAU,IAAV,EAAgBA,MAAM,KAAKE,KAAX,CAAhB,EAAmCF,KAAnC,CAAR,GAAoD,IAA3D;AACD;;;2BAEMG,I,EAAcC,Q,EAAoBJ,K,EAAwB;AAC/D,UAAI,KAAKH,KAAT,EAAgB;AACd,aAAKQ,eAAL,CAAqBF,IAArB,EAA2BC,QAA3B,EAAqCJ,KAArC;AACD,OAFD,MAEO;AACL,aAAKJ,KAAL,CAAWU,MAAX,CAAkBH,IAAlB,EAAwBC,QAAxB,EAAkCJ,KAAlC;AACD;AACF;;AAED;;;;;;4BAGQO,I,EAAW;AACjB,aAAO,KAAKX,KAAL,CAAWY,OAAX,CAAmBD,IAAnB,CAAP;AACD;;AAED;;;;oCACgBJ,I,EAAcC,Q,EAAoBJ,K,EAAwB;AAAA;;AACxE,UAAI,KAAKH,KAAL,IAAc,KAAKA,KAAL,CAAWM,IAAX,CAAlB,EAAoC;AAClCC,iBAAS,KAAKP,KAAL,CAAWM,IAAX,CAAT;AACD,OAFD,MAEO;AACL,aAAKP,KAAL,CAAWU,MAAX,CACEH,IADF,EAEE,mBAAW;AACT,cAAI,MAAKN,KAAT,EAAgB;AACd,kBAAKA,KAAL,CAAWM,IAAX,IAAmBM,OAAnB;AACD;AACDL,mBAASK,OAAT;AACD,SAPH,EAQET,KARF;AAUD;AACF;;AAED;;;;8BACUF,I,EAAgC;AACxC,UAAI,OAAO,KAAKE,KAAZ,KAAsB,UAA1B,EAAsC;AACpC,eAAO,KAAKA,KAAL,CAAWF,IAAX,CAAP;AACD,OAFD,MAEO;AACL,eAAQA,KAAKE,KAAL,CAAW,KAAKA,KAAhB,CAAR;AACD;AACF;;AAED;;;;wBACwD;AACtD,aAAO,KAAKJ,KAAL,CAAWI,KAAlB;AACD;;AAED;;;;wBACoB;AAClB,aAAO,OAAO,KAAKJ,KAAL,CAAWM,KAAlB,KAA4B,QAA5B,GACH,KAAKN,KAAL,CAAWM,KADR,GAEHV,aAFJ;AAGD;;;wBAEkC;AACjC,aAAO,KAAKI,KAAL,CAAWc,QAAX,IAAuBjB,gBAA9B;AACD;;;;;;kBA3FkBE,Q","file":"strategy.js","sourcesContent":["// @flow\n\nimport Query from \"./query\"\nimport type { MatchData } from \"./query\"\n\nconst DEFAULT_INDEX = 2\n\nfunction DEFAULT_TEMPLATE(value) {\n  return value\n}\n\n/**\n * Properties for a strategy.\n *\n * @typedef\n */\nexport type StrategyProperties = {\n  match: RegExp | (string => MatchData | null),\n  search: Function,\n  replace: any => string[] | string | null,\n  cache?: boolean,\n  context?: Function,\n  template?: any => string,\n  index?: number,\n  id?: string,\n}\n\n/**\n * Encapsulate a single strategy.\n */\nexport default class Strategy {\n  props: StrategyProperties\n  cache: ?Object\n\n  constructor(props: StrategyProperties) {\n    this.props = props\n    this.cache = props.cache ? {} : null\n  }\n\n  /**\n   * @return {this}\n   */\n  destroy() {\n    this.cache = null\n    return this\n  }\n\n  /**\n   * Build a Query object by the given string if this matches to the string.\n   *\n   * @param {string} text - Head to input cursor.\n   */\n  buildQuery(text: string): ?Query {\n    if (typeof this.props.context === \"function\") {\n      const context = this.props.context(text)\n      if (typeof context === \"string\") {\n        text = context\n      } else if (!context) {\n        return null\n      }\n    }\n    const match = this.matchText(text)\n    return match ? new Query(this, match[this.index], match) : null\n  }\n\n  search(term: string, callback: Function, match: MatchData): void {\n    if (this.cache) {\n      this.searchWithCache(term, callback, match)\n    } else {\n      this.props.search(term, callback, match)\n    }\n  }\n\n  /**\n   * @param {object} data - An element of array callbacked by search function.\n   */\n  replace(data: any) {\n    return this.props.replace(data)\n  }\n\n  /** @private */\n  searchWithCache(term: string, callback: Function, match: MatchData): void {\n    if (this.cache && this.cache[term]) {\n      callback(this.cache[term])\n    } else {\n      this.props.search(\n        term,\n        results => {\n          if (this.cache) {\n            this.cache[term] = results\n          }\n          callback(results)\n        },\n        match,\n      )\n    }\n  }\n\n  /** @private */\n  matchText(text: string): MatchData | null {\n    if (typeof this.match === \"function\") {\n      return this.match(text)\n    } else {\n      return (text.match(this.match): any)\n    }\n  }\n\n  /** @private */\n  get match(): $PropertyType<StrategyProperties, \"match\"> {\n    return this.props.match\n  }\n\n  /** @private */\n  get index(): number {\n    return typeof this.props.index === \"number\"\n      ? this.props.index\n      : DEFAULT_INDEX\n  }\n\n  get template(): (...any) => string {\n    return this.props.template || DEFAULT_TEMPLATE\n  }\n}\n"]}