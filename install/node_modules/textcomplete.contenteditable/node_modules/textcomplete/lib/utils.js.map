{"version":3,"sources":["../src/utils.js"],"names":["calculateElementOffset","getLineHeightPx","createCustomEvent","window","CustomEvent","type","options","document","defaultView","cancelable","detail","undefined","event","createEvent","initCustomEvent","el","rect","getBoundingClientRect","ownerDocument","documentElement","offset","top","pageYOffset","left","pageXOffset","clientTop","clientLeft","CHAR_CODE_ZERO","charCodeAt","CHAR_CODE_NINE","isDigit","charCode","node","computedStyle","getComputedStyle","lineHeight","length","parseFloat","fontSize","body","tempNode","createElement","nodeName","innerHTML","style","fontFamily","appendChild","height","offsetHeight","removeChild"],"mappings":";;;;;QA0CgBA,sB,GAAAA,sB;QA4BAC,e,GAAAA,e;;;AApEhB;;;;;AAKO,IAAMC,gDAAqB,YAAM;AACtC,MAAI,OAAOC,OAAOC,WAAd,KAA8B,UAAlC,EAA8C;AAC5C,WAAO,UACLC,IADK,EAELC,OAFK,EAGQ;AACb,aAAO,IAAIC,SAASC,WAAT,CAAqBJ,WAAzB,CAAqCC,IAArC,EAA2C;AAChDI,oBAAaH,WAAWA,QAAQG,UAApB,IAAmC,KADC;AAEhDC,gBAASJ,WAAWA,QAAQI,MAApB,IAA+BC;AAFS,OAA3C,CAAP;AAID,KARD;AASD,GAVD,MAUO;AACL;AACA;AACA,WAAO,UACLN,IADK,EAELC,OAFK,EAGQ;AACb,UAAMM,QAAQL,SAASM,WAAT,CAAqB,aAArB,CAAd;AACAD,YAAME,eAAN,CACET,IADF;AAEE,mBAAc,KAFhB,EAGGC,WAAWA,QAAQG,UAApB,IAAmC,KAHrC,EAIGH,WAAWA,QAAQI,MAApB,IAA+BC,SAJjC;AAMA,aAAOC,KAAP;AACD,KAZD;AAaD;AACF,CA5BgC,EAA1B;;AA8BP;;;;;AAKO,SAASZ,sBAAT,CACLe,EADK,EAE0B;AAC/B,MAAMC,OAAOD,GAAGE,qBAAH,EAAb;AAD+B,0BAEUF,GAAGG,aAFb;AAAA,MAEvBV,WAFuB,qBAEvBA,WAFuB;AAAA,MAEVW,eAFU,qBAEVA,eAFU;;AAG/B,MAAMC,SAAS;AACbC,SAAKL,KAAKK,GAAL,GAAWb,YAAYc,WADf;AAEbC,UAAMP,KAAKO,IAAL,GAAYf,YAAYgB;AAFjB,GAAf;AAIA,MAAIL,eAAJ,EAAqB;AACnBC,WAAOC,GAAP,IAAcF,gBAAgBM,SAA9B;AACAL,WAAOG,IAAP,IAAeJ,gBAAgBO,UAA/B;AACD;AACD,SAAON,MAAP;AACD;;AAED,IAAMO,iBAAiB,IAAIC,UAAJ,CAAe,CAAf,CAAvB;AACA,IAAMC,iBAAiB,IAAID,UAAJ,CAAe,CAAf,CAAvB;;AAEA,SAASE,OAAT,CAAiBC,QAAjB,EAA4C;AAC1C,SAAOA,YAAYJ,cAAZ,IAA8BI,YAAYF,cAAjD;AACD;;AAED;;;;;AAKO,SAAS5B,eAAT,CAAyB+B,IAAzB,EAAoD;AACzD,MAAMC,gBAAgB9B,OAAO+B,gBAAP,CAAwBF,IAAxB,CAAtB;;AAEA;AACA;AACA;AACA;AACA,MAAIF,QAAQG,cAAcE,UAAd,CAAyBP,UAAzB,CAAoC,CAApC,CAAR,CAAJ,EAAqD;AACnD;AACA;AACA,QACEE,QACEG,cAAcE,UAAd,CAAyBP,UAAzB,CACEK,cAAcE,UAAd,CAAyBC,MAAzB,GAAkC,CADpC,CADF,CADF,EAME;AACA,aACEC,WAAWJ,cAAcE,UAAzB,IACAE,WAAWJ,cAAcK,QAAzB,CAFF;AAID,KAXD,MAWO;AACL,aAAOD,WAAWJ,cAAcE,UAAzB,CAAP;AACD;AACF;;AAED;AACA;AACA,MAAMI,OAAOhC,SAASgC,IAAtB;AACA,MAAI,CAACA,IAAL,EAAW;AACT,WAAO,CAAP;AACD;AACD,MAAMC,WAAWjC,SAASkC,aAAT,CAAuBT,KAAKU,QAA5B,CAAjB;AACAF,WAASG,SAAT,GAAqB,QAArB;AACAH,WAASI,KAAT,CAAeN,QAAf,GAA0BL,cAAcK,QAAxC;AACAE,WAASI,KAAT,CAAeC,UAAf,GAA4BZ,cAAcY,UAA1C;AACAN,OAAKO,WAAL,CAAiBN,QAAjB;AACA;AACA,MAAMO,SAASP,SAASQ,YAAxB;AACAT,OAAKU,WAAL,CAAiBT,QAAjB;AACA,SAAOO,MAAP;AACD","file":"utils.js","sourcesContent":["// @flow\n\n/**\n * Create a custom event\n *\n * @private\n */\nexport const createCustomEvent = (() => {\n  if (typeof window.CustomEvent === \"function\") {\n    return function(\n      type: string,\n      options: ?{ detail?: Object, cancelable?: boolean },\n    ): CustomEvent {\n      return new document.defaultView.CustomEvent(type, {\n        cancelable: (options && options.cancelable) || false,\n        detail: (options && options.detail) || undefined,\n      })\n    }\n  } else {\n    // Custom event polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#polyfill\n    return function(\n      type: string,\n      options: ?{ detail?: Object, cancelable?: boolean },\n    ): CustomEvent {\n      const event = document.createEvent(\"CustomEvent\")\n      event.initCustomEvent(\n        type,\n        /* bubbles */ false,\n        (options && options.cancelable) || false,\n        (options && options.detail) || undefined,\n      )\n      return event\n    }\n  }\n})()\n\n/**\n * Get the current coordinates of the `el` relative to the document.\n *\n * @private\n */\nexport function calculateElementOffset(\n  el: HTMLElement,\n): { top: number, left: number } {\n  const rect = el.getBoundingClientRect()\n  const { defaultView, documentElement } = el.ownerDocument\n  const offset = {\n    top: rect.top + defaultView.pageYOffset,\n    left: rect.left + defaultView.pageXOffset,\n  }\n  if (documentElement) {\n    offset.top -= documentElement.clientTop\n    offset.left -= documentElement.clientLeft\n  }\n  return offset\n}\n\nconst CHAR_CODE_ZERO = \"0\".charCodeAt(0)\nconst CHAR_CODE_NINE = \"9\".charCodeAt(0)\n\nfunction isDigit(charCode: number): boolean {\n  return charCode >= CHAR_CODE_ZERO && charCode <= CHAR_CODE_NINE\n}\n\n/**\n * Returns the line-height of the given node in pixels.\n *\n * @private\n */\nexport function getLineHeightPx(node: HTMLElement): number {\n  const computedStyle = window.getComputedStyle(node)\n\n  // If the char code starts with a digit, it is either a value in pixels,\n  // or unitless, as per:\n  // https://drafts.csswg.org/css2/visudet.html#propdef-line-height\n  // https://drafts.csswg.org/css2/cascade.html#computed-value\n  if (isDigit(computedStyle.lineHeight.charCodeAt(0))) {\n    // In real browsers the value is *always* in pixels, even for unit-less\n    // line-heights. However, we still check as per the spec.\n    if (\n      isDigit(\n        computedStyle.lineHeight.charCodeAt(\n          computedStyle.lineHeight.length - 1,\n        ),\n      )\n    ) {\n      return (\n        parseFloat(computedStyle.lineHeight) *\n        parseFloat(computedStyle.fontSize)\n      )\n    } else {\n      return parseFloat(computedStyle.lineHeight)\n    }\n  }\n\n  // Otherwise, the value is \"normal\".\n  // If the line-height is \"normal\", calculate by font-size\n  const body = document.body\n  if (!body) {\n    return 0\n  }\n  const tempNode = document.createElement(node.nodeName)\n  tempNode.innerHTML = \"&nbsp;\"\n  tempNode.style.fontSize = computedStyle.fontSize\n  tempNode.style.fontFamily = computedStyle.fontFamily\n  body.appendChild(tempNode)\n  // Assume the height of the element is the line-height\n  const height = tempNode.offsetHeight\n  body.removeChild(tempNode)\n  return height\n}\n"]}