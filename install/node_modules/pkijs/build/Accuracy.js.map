{"version":3,"sources":["../src/Accuracy.js"],"names":["asn1js","Accuracy","constructor","parameters","seconds","defaultValues","millis","micros","fromSchema","schema","memberName","Error","compareWithDefault","memberValue","names","Sequence","name","blockName","optional","value","Integer","Primitive","idBlock","tagClass","tagNumber","asn1","compareSchema","verified","result","valueBlock","valueDec","intMillis","valueHex","intMicros","toSchema","outputArray","push","toJSON","_object"],"mappings":";;;;;;AAAA;;IAAYA,M;;AACZ;;;;AACA;AACA;;;AAGe,MAAMC,QAAN,CACf;AACC;AACA;;;;;AAKAC,aAAYC,aAAa,EAAzB,EACA;AACC;AACA,MAAG,aAAaA,UAAhB;AACC;;;;AAIA,QAAKC,OAAL,GAAe,iCAAmBD,UAAnB,EAA+B,SAA/B,EAA0CF,SAASI,aAAT,CAAuB,SAAvB,CAA1C,CAAf;;AAED,MAAG,YAAYF,UAAf;AACC;;;;AAIA,QAAKG,MAAL,GAAc,iCAAmBH,UAAnB,EAA+B,QAA/B,EAAyCF,SAASI,aAAT,CAAuB,QAAvB,CAAzC,CAAd;;AAED,MAAG,YAAYF,UAAf;AACC;;;;AAIA,QAAKI,MAAL,GAAc,iCAAmBJ,UAAnB,EAA+B,QAA/B,EAAyCF,SAASI,aAAT,CAAuB,QAAvB,CAAzC,CAAd;AACD;;AAEA;AACA,MAAG,YAAYF,UAAf,EACC,KAAKK,UAAL,CAAgBL,WAAWM,MAA3B;AACD;AACA;AACD;AACA;;;;AAIA,QAAOJ,aAAP,CAAqBK,UAArB,EACA;AACC,UAAOA,UAAP;AAEC,QAAK,SAAL;AACA,QAAK,QAAL;AACA,QAAK,QAAL;AACC,WAAO,CAAP;AACD;AACC,UAAM,IAAIC,KAAJ,CAAW,2CAA0CD,UAAW,EAAhE,CAAN;AAPF;AASA;AACD;AACA;;;;;AAKA,QAAOE,kBAAP,CAA0BF,UAA1B,EAAsCG,WAAtC,EACA;AACC,UAAOH,UAAP;AAEC,QAAK,SAAL;AACA,QAAK,QAAL;AACA,QAAK,QAAL;AACC,WAAQG,gBAAgBZ,SAASI,aAAT,CAAuBK,UAAvB,CAAxB;AACD;AACC,UAAM,IAAIC,KAAJ,CAAW,2CAA0CD,UAAW,EAAhE,CAAN;AAPF;AASA;AACD;AACA;;;;;AAKA,QAAOD,MAAP,CAAcN,aAAa,EAA3B,EACA;AACC;AACA;AACA;AACA;;AAEA;;;;;;;AAOA,QAAMW,QAAQ,iCAAmBX,UAAnB,EAA+B,OAA/B,EAAwC,EAAxC,CAAd;;AAEA,SAAQ,IAAIH,OAAOe,QAAX,CAAoB;AAC3BC,SAAOF,MAAMG,SAAN,IAAmB,EADC;AAE3BC,aAAU,IAFiB;AAG3BC,UAAO,CACN,IAAInB,OAAOoB,OAAX,CAAmB;AAClBF,cAAU,IADQ;AAElBF,UAAOF,MAAMV,OAAN,IAAiB;AAFN,IAAnB,CADM,EAKN,IAAIJ,OAAOqB,SAAX,CAAqB;AACpBL,UAAOF,MAAMR,MAAN,IAAgB,EADH;AAEpBY,cAAU,IAFU;AAGpBI,aAAS;AACRC,eAAU,CADF,EACK;AACbC,gBAAW,CAFH,CAEK;AAFL;AAHW,IAArB,CALM,EAaN,IAAIxB,OAAOqB,SAAX,CAAqB;AACpBL,UAAOF,MAAMP,MAAN,IAAgB,EADH;AAEpBW,cAAU,IAFU;AAGpBI,aAAS;AACRC,eAAU,CADF,EACK;AACbC,gBAAW,CAFH,CAEK;AAFL;AAHW,IAArB,CAbM;AAHoB,GAApB,CAAR;AA0BA;AACD;AACA;;;;AAIAhB,YAAWC,MAAX,EACA;AACC;AACA,2BAAWA,MAAX,EAAmB,CAClB,SADkB,EAElB,QAFkB,EAGlB,QAHkB,CAAnB;AAKA;;AAEA;AACA,QAAMgB,OAAOzB,OAAO0B,aAAP,CAAqBjB,MAArB,EACZA,MADY,EAEZR,SAASQ,MAAT,CAAgB;AACfK,UAAO;AACNV,aAAS,SADH;AAENE,YAAQ,QAFF;AAGNC,YAAQ;AAHF;AADQ,GAAhB,CAFY,CAAb;;AAWA,MAAGkB,KAAKE,QAAL,KAAkB,KAArB,EACC,MAAM,IAAIhB,KAAJ,CAAU,kEAAV,CAAN;AACD;;AAEA;AACA,MAAG,aAAac,KAAKG,MAArB,EACC,KAAKxB,OAAL,GAAeqB,KAAKG,MAAL,CAAYxB,OAAZ,CAAoByB,UAApB,CAA+BC,QAA9C;;AAED,MAAG,YAAYL,KAAKG,MAApB,EACA;AACC,SAAMG,YAAY,IAAI/B,OAAOoB,OAAX,CAAmB,EAAEY,UAAUP,KAAKG,MAAL,CAAYtB,MAAZ,CAAmBuB,UAAnB,CAA8BG,QAA1C,EAAnB,CAAlB;AACA,QAAK1B,MAAL,GAAcyB,UAAUF,UAAV,CAAqBC,QAAnC;AACA;;AAED,MAAG,YAAYL,KAAKG,MAApB,EACA;AACC,SAAMK,YAAY,IAAIjC,OAAOoB,OAAX,CAAmB,EAAEY,UAAUP,KAAKG,MAAL,CAAYrB,MAAZ,CAAmBsB,UAAnB,CAA8BG,QAA1C,EAAnB,CAAlB;AACA,QAAKzB,MAAL,GAAc0B,UAAUJ,UAAV,CAAqBC,QAAnC;AACA;AACD;AACA;AACD;AACA;;;;AAIAI,YACA;AACC;AACA,QAAMC,cAAc,EAApB;;AAEA,MAAG,aAAa,IAAhB,EACCA,YAAYC,IAAZ,CAAiB,IAAIpC,OAAOoB,OAAX,CAAmB,EAAED,OAAO,KAAKf,OAAd,EAAnB,CAAjB;;AAED,MAAG,YAAY,IAAf,EACA;AACC,SAAM2B,YAAY,IAAI/B,OAAOoB,OAAX,CAAmB,EAAED,OAAO,KAAKb,MAAd,EAAnB,CAAlB;;AAEA6B,eAAYC,IAAZ,CAAiB,IAAIpC,OAAOqB,SAAX,CAAqB;AACrCC,aAAS;AACRC,eAAU,CADF,EACK;AACbC,gBAAW,CAFH,CAEK;AAFL,KAD4B;AAKrCQ,cAAUD,UAAUF,UAAV,CAAqBG;AALM,IAArB,CAAjB;AAOA;;AAED,MAAG,YAAY,IAAf,EACA;AACC,SAAMC,YAAY,IAAIjC,OAAOoB,OAAX,CAAmB,EAAED,OAAO,KAAKZ,MAAd,EAAnB,CAAlB;;AAEA4B,eAAYC,IAAZ,CAAiB,IAAIpC,OAAOqB,SAAX,CAAqB;AACrCC,aAAS;AACRC,eAAU,CADF,EACK;AACbC,gBAAW,CAFH,CAEK;AAFL,KAD4B;AAKrCQ,cAAUC,UAAUJ,UAAV,CAAqBG;AALM,IAArB,CAAjB;AAOA;AACD;;AAEA;AACA,SAAQ,IAAIhC,OAAOe,QAAX,CAAoB;AAC3BI,UAAOgB;AADoB,GAApB,CAAR;AAGA;AACA;AACD;AACA;;;;AAIAE,UACA;AACC,QAAMC,UAAU,EAAhB;;AAEA,MAAG,aAAa,IAAhB,EACCA,QAAQlC,OAAR,GAAkB,KAAKA,OAAvB;;AAED,MAAG,YAAY,IAAf,EACCkC,QAAQhC,MAAR,GAAiB,KAAKA,MAAtB;;AAED,MAAG,YAAY,IAAf,EACCgC,QAAQ/B,MAAR,GAAiB,KAAKA,MAAtB;;AAED,SAAO+B,OAAP;AACA;AACD;AA3OD;kBADqBrC,Q,EA8OrB","file":"Accuracy.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC3161\r\n */\r\nexport default class Accuracy\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for Accuracy class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"seconds\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number}\r\n\t\t\t * @description seconds\r\n\t\t\t */\r\n\t\t\tthis.seconds = getParametersValue(parameters, \"seconds\", Accuracy.defaultValues(\"seconds\"));\r\n\t\t\r\n\t\tif(\"millis\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number}\r\n\t\t\t * @description millis\r\n\t\t\t */\r\n\t\t\tthis.millis = getParametersValue(parameters, \"millis\", Accuracy.defaultValues(\"millis\"));\r\n\t\t\r\n\t\tif(\"micros\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number}\r\n\t\t\t * @description micros\r\n\t\t\t */\r\n\t\t\tthis.micros = getParametersValue(parameters, \"micros\", Accuracy.defaultValues(\"micros\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"seconds\":\r\n\t\t\tcase \"millis\":\r\n\t\t\tcase \"micros\":\r\n\t\t\t\treturn 0;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for Accuracy class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"seconds\":\r\n\t\t\tcase \"millis\":\r\n\t\t\tcase \"micros\":\r\n\t\t\t\treturn (memberValue === Accuracy.defaultValues(memberName));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for Accuracy class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//Accuracy ::= SEQUENCE {\r\n\t\t//    seconds        INTEGER              OPTIONAL,\r\n\t\t//    millis     [0] INTEGER  (1..999)    OPTIONAL,\r\n\t\t//    micros     [1] INTEGER  (1..999)    OPTIONAL  }\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [seconds]\r\n\t\t * @property {string} [millis]\r\n\t\t * @property {string} [micros]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\toptional: true,\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tname: (names.seconds || \"\")\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.millis || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.micros || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"seconds\",\r\n\t\t\t\"millis\",\r\n\t\t\t\"micros\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tAccuracy.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tseconds: \"seconds\",\r\n\t\t\t\t\tmillis: \"millis\",\r\n\t\t\t\t\tmicros: \"micros\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for Accuracy\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"seconds\" in asn1.result)\r\n\t\t\tthis.seconds = asn1.result.seconds.valueBlock.valueDec;\r\n\r\n\t\tif(\"millis\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst intMillis = new asn1js.Integer({ valueHex: asn1.result.millis.valueBlock.valueHex });\r\n\t\t\tthis.millis = intMillis.valueBlock.valueDec;\r\n\t\t}\r\n\r\n\t\tif(\"micros\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst intMicros = new asn1js.Integer({ valueHex: asn1.result.micros.valueBlock.valueHex });\r\n\t\t\tthis.micros = intMicros.valueBlock.valueDec;\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array of output sequence\r\n\t\tconst outputArray = [];\r\n\r\n\t\tif(\"seconds\" in this)\r\n\t\t\toutputArray.push(new asn1js.Integer({ value: this.seconds }));\r\n\r\n\t\tif(\"millis\" in this)\r\n\t\t{\r\n\t\t\tconst intMillis = new asn1js.Integer({ value: this.millis });\r\n\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: intMillis.valueBlock.valueHex\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\tif(\"micros\" in this)\r\n\t\t{\r\n\t\t\tconst intMicros = new asn1js.Integer({ value: this.micros });\r\n\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: intMicros.valueBlock.valueHex\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {};\r\n\r\n\t\tif(\"seconds\" in this)\r\n\t\t\t_object.seconds = this.seconds;\r\n\r\n\t\tif(\"millis\" in this)\r\n\t\t\t_object.millis = this.millis;\r\n\r\n\t\tif(\"micros\" in this)\r\n\t\t\t_object.micros = this.micros;\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}