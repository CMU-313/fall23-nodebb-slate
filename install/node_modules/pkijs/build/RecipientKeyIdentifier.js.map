{"version":3,"sources":["../src/RecipientKeyIdentifier.js"],"names":["asn1js","RecipientKeyIdentifier","constructor","parameters","subjectKeyIdentifier","defaultValues","date","other","fromSchema","schema","memberName","OctetString","GeneralizedTime","Error","compareWithDefault","memberValue","isEqual","year","month","day","hour","minute","second","millisecond","keyAttrId","names","Sequence","name","blockName","value","optional","asn1","compareSchema","verified","result","toSchema","outputArray","push","toJSON","_object"],"mappings":"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","file":"RecipientKeyIdentifier.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport OtherKeyAttribute from \"./OtherKeyAttribute.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class RecipientKeyIdentifier\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RecipientKeyIdentifier class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {OctetString}\r\n\t\t * @description subjectKeyIdentifier\r\n\t\t */\r\n\t\tthis.subjectKeyIdentifier = getParametersValue(parameters, \"subjectKeyIdentifier\", RecipientKeyIdentifier.defaultValues(\"subjectKeyIdentifier\"));\r\n\r\n\t\tif(\"date\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {GeneralizedTime}\r\n\t\t\t * @description date\r\n\t\t\t */\r\n\t\t\tthis.date = getParametersValue(parameters, \"date\", RecipientKeyIdentifier.defaultValues(\"date\"));\r\n\r\n\t\tif(\"other\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {OtherKeyAttribute}\r\n\t\t\t * @description other\r\n\t\t\t */\r\n\t\t\tthis.other = getParametersValue(parameters, \"other\", RecipientKeyIdentifier.defaultValues(\"other\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"subjectKeyIdentifier\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"date\":\r\n\t\t\t\treturn new asn1js.GeneralizedTime();\r\n\t\t\tcase \"other\":\r\n\t\t\t\treturn new OtherKeyAttribute();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RecipientKeyIdentifier class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"subjectKeyIdentifier\":\r\n\t\t\t\treturn (memberValue.isEqual(RecipientKeyIdentifier.defaultValues(\"subjectKeyIdentifier\")));\r\n\t\t\tcase \"date\":\r\n\t\t\t\t// noinspection OverlyComplexBooleanExpressionJS\r\n\t\t\t\treturn ((memberValue.year === 0) &&\r\n\t\t\t\t(memberValue.month === 0) &&\r\n\t\t\t\t(memberValue.day === 0) &&\r\n\t\t\t\t(memberValue.hour === 0) &&\r\n\t\t\t\t(memberValue.minute === 0) &&\r\n\t\t\t\t(memberValue.second === 0) &&\r\n\t\t\t\t(memberValue.millisecond === 0));\r\n\t\t\tcase \"other\":\r\n\t\t\t\treturn ((memberValue.keyAttrId === \"\") && ((\"keyAttr\" in memberValue) === false));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RecipientKeyIdentifier class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//RecipientKeyIdentifier ::= SEQUENCE {\r\n\t\t//    subjectKeyIdentifier SubjectKeyIdentifier,\r\n\t\t//    date GeneralizedTime OPTIONAL,\r\n\t\t//    other OtherKeyAttribute OPTIONAL }\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [type]\r\n\t\t * @property {string} [setName]\r\n\t\t * @property {string} [values]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.OctetString({ name: (names.subjectKeyIdentifier || \"\") }),\r\n\t\t\t\tnew asn1js.GeneralizedTime({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tname: (names.date || \"\")\r\n\t\t\t\t}),\r\n\t\t\t\tOtherKeyAttribute.schema(names.other || {})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"subjectKeyIdentifier\",\r\n\t\t\t\"date\",\r\n\t\t\t\"other\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRecipientKeyIdentifier.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tsubjectKeyIdentifier: \"subjectKeyIdentifier\",\r\n\t\t\t\t\tdate: \"date\",\r\n\t\t\t\t\tother: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"other\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RecipientKeyIdentifier\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.subjectKeyIdentifier = asn1.result.subjectKeyIdentifier;\r\n\r\n\t\tif(\"date\" in asn1.result)\r\n\t\t\tthis.date = asn1.result.date;\r\n\r\n\t\tif(\"other\" in asn1.result)\r\n\t\t\tthis.other = new OtherKeyAttribute({ schema: asn1.result.other });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\r\n\t\toutputArray.push(this.subjectKeyIdentifier);\r\n\r\n\t\tif(\"date\" in this)\r\n\t\t\toutputArray.push(this.date);\r\n\r\n\t\tif(\"other\" in this)\r\n\t\t\toutputArray.push(this.other.toSchema());\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tsubjectKeyIdentifier: this.subjectKeyIdentifier.toJSON()\r\n\t\t};\r\n\r\n\t\tif(\"date\" in this)\r\n\t\t\t_object.date = this.date;\r\n\r\n\t\tif(\"other\" in this)\r\n\t\t\t_object.other = this.other.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}