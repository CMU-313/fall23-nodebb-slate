{"version":3,"sources":["../src/RecipientInfo.js"],"names":["asn1js","RecipientInfo","constructor","parameters","variant","defaultValues","value","fromSchema","schema","memberName","Error","compareWithDefault","memberValue","Object","keys","length","names","Choice","blockName","Constructed","name","idBlock","tagClass","tagNumber","valueBlock","asn1","compareSchema","verified","result","blockSequence","Sequence","toSchema","_schema","Any","toJSON","_object"],"mappings":"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","file":"RecipientInfo.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport KeyTransRecipientInfo from \"./KeyTransRecipientInfo.js\";\r\nimport KeyAgreeRecipientInfo from \"./KeyAgreeRecipientInfo.js\";\r\nimport KEKRecipientInfo from \"./KEKRecipientInfo.js\";\r\nimport PasswordRecipientinfo from \"./PasswordRecipientinfo.js\";\r\nimport OtherRecipientInfo from \"./OtherRecipientInfo.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class RecipientInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RecipientInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @description variant\r\n\t\t */\r\n\t\tthis.variant = getParametersValue(parameters, \"variant\", RecipientInfo.defaultValues(\"variant\"));\r\n\r\n\t\tif(\"value\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {*}\r\n\t\t\t * @description value\r\n\t\t\t */\r\n\t\t\tthis.value = getParametersValue(parameters, \"value\", RecipientInfo.defaultValues(\"value\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (-1);\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (memberValue === RecipientInfo.defaultValues(memberName));\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//RecipientInfo ::= CHOICE {\r\n\t\t//    ktri KeyTransRecipientInfo,\r\n\t\t//    kari [1] KeyAgreeRecipientInfo,\r\n\t\t//    kekri [2] KEKRecipientInfo,\r\n\t\t//    pwri [3] PasswordRecipientinfo,\r\n\t\t//    ori [4] OtherRecipientInfo }\r\n\t\t\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [type]\r\n\t\t * @property {string} [setName]\r\n\t\t * @property {string} [values]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Choice({\r\n\t\t\tvalue: [\r\n\t\t\t\tKeyTransRecipientInfo.schema({\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\tblockName: (names.blockName || \"\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: KeyAgreeRecipientInfo.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: KEKRecipientInfo.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: PasswordRecipientinfo.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 4 // [4]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: OtherRecipientInfo.schema().valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"blockName\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRecipientInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"blockName\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RecipientInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(asn1.result.blockName.idBlock.tagClass === 1)\r\n\t\t{\r\n\t\t\tthis.variant = 1;\r\n\t\t\tthis.value = new KeyTransRecipientInfo({ schema: asn1.result.blockName });\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//region Create \"SEQUENCE\" from \"ASN1_CONSTRUCTED\"\r\n\t\t\tconst blockSequence = new asn1js.Sequence({\r\n\t\t\t\tvalue: asn1.result.blockName.valueBlock.value\r\n\t\t\t});\r\n\t\t\t//endregion\r\n\r\n\t\t\tswitch(asn1.result.blockName.idBlock.tagNumber)\r\n\t\t\t{\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.variant = 2;\r\n\t\t\t\t\tthis.value = new KeyAgreeRecipientInfo({ schema: blockSequence });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tthis.variant = 3;\r\n\t\t\t\t\tthis.value = new KEKRecipientInfo({ schema: blockSequence });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tthis.variant = 4;\r\n\t\t\t\t\tthis.value = new PasswordRecipientinfo({ schema: blockSequence });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tthis.variant = 5;\r\n\t\t\t\t\tthis.value = new OtherRecipientInfo({ schema: blockSequence });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"Incorrect structure of RecipientInfo block\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\tconst _schema = this.value.toSchema();\r\n\r\n\t\tswitch(this.variant)\r\n\t\t{\r\n\t\t\tcase 1:\r\n\t\t\t\treturn _schema;\r\n\t\t\tcase 2:\r\n\t\t\tcase 3:\r\n\t\t\tcase 4:\r\n\t\t\t\t//region Create \"ASN1_CONSTRUCTED\" from \"SEQUENCE\"\r\n\t\t\t\t_schema.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\r\n\t\t\t\t_schema.idBlock.tagNumber = (this.variant - 1);\r\n\t\t\t\t//endregion\r\n\r\n\t\t\t\treturn _schema;\r\n\t\t\tdefault:\r\n\t\t\t\treturn new asn1js.Any();\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tvariant: this.variant\r\n\t\t};\r\n\r\n\t\tif((this.variant >= 1) && (this.variant <= 4))\r\n\t\t\t_object.value = this.value.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}