{"version":3,"sources":["../src/BasicConstraints.js"],"names":["asn1js","BasicConstraints","constructor","parameters","cA","pathLenConstraint","fromSchema","schema","defaultValues","memberName","Error","names","Sequence","name","blockName","value","Boolean","optional","Integer","asn1","compareSchema","verified","result","valueBlock","isHexOnly","valueDec","toSchema","outputArray","push","toJSON","object"],"mappings":"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","file":"BasicConstraints.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class BasicConstraints\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for BasicConstraints class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t * @property {Object} [cA]\r\n\t * @property {Object} [pathLenConstraint]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @description cA\r\n\t\t */\r\n\t\tthis.cA = getParametersValue(parameters, \"cA\", false);\r\n\r\n\t\tif(\"pathLenConstraint\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number|Integer}\r\n\t\t\t * @description pathLenConstraint\r\n\t\t\t */\r\n\t\t\tthis.pathLenConstraint = getParametersValue(parameters, \"pathLenConstraint\", 0);\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"cA\":\r\n\t\t\t\treturn false;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for BasicConstraints class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t// BasicConstraints OID ::= 2.5.29.19\r\n\t\t//\r\n\t\t//BasicConstraints ::= SEQUENCE {\r\n\t\t//    cA                      BOOLEAN DEFAULT FALSE,\r\n\t\t//    pathLenConstraint       INTEGER (0..MAX) OPTIONAL }\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [cA]\r\n\t\t * @property {string} [pathLenConstraint]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Boolean({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tname: (names.cA || \"\")\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Integer({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tname: (names.pathLenConstraint || \"\")\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"cA\",\r\n\t\t\t\"pathLenConstraint\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tBasicConstraints.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tcA: \"cA\",\r\n\t\t\t\t\tpathLenConstraint: \"pathLenConstraint\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for BasicConstraints\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"cA\" in asn1.result)\r\n\t\t\tthis.cA = asn1.result.cA.valueBlock.value;\r\n\r\n\t\tif(\"pathLenConstraint\" in asn1.result)\r\n\t\t{\r\n\t\t\tif(asn1.result.pathLenConstraint.valueBlock.isHexOnly)\r\n\t\t\t\tthis.pathLenConstraint = asn1.result.pathLenConstraint;\r\n\t\t\telse\r\n\t\t\t\tthis.pathLenConstraint = asn1.result.pathLenConstraint.valueBlock.valueDec;\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(this.cA !== BasicConstraints.defaultValues(\"cA\"))\r\n\t\t\toutputArray.push(new asn1js.Boolean({ value: this.cA }));\r\n\t\t\r\n\t\tif(\"pathLenConstraint\" in this)\r\n\t\t{\r\n\t\t\tif(this.pathLenConstraint instanceof asn1js.Integer)\r\n\t\t\t\toutputArray.push(this.pathLenConstraint);\r\n\t\t\telse\r\n\t\t\t\toutputArray.push(new asn1js.Integer({ value: this.pathLenConstraint }));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(this.cA !== BasicConstraints.defaultValues(\"cA\"))\r\n\t\t\tobject.cA = this.cA;\r\n\r\n\t\tif(\"pathLenConstraint\" in this)\r\n\t\t{\r\n\t\t\tif(this.pathLenConstraint instanceof asn1js.Integer)\r\n\t\t\t\tobject.pathLenConstraint = this.pathLenConstraint.toJSON();\r\n\t\t\telse\r\n\t\t\t\tobject.pathLenConstraint = this.pathLenConstraint;\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}