{"version":3,"sources":["../src/RSAPrivateKey.js"],"names":["asn1js","RSAPrivateKey","constructor","parameters","version","defaultValues","modulus","publicExponent","privateExponent","prime1","prime2","exponent1","exponent2","coefficient","otherPrimeInfos","fromSchema","schema","fromJSON","json","memberName","Integer","Error","names","Sequence","name","blockName","value","optional","Repeated","otherPrimeInfosName","otherPrimeInfo","asn1","compareSchema","verified","result","valueBlock","valueDec","convertFromDER","Array","from","element","toSchema","outputArray","push","convertToDER","toJSON","jwk","n","valueHex","e","d","p","q","dp","dq","qi","oth"],"mappings":"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","file":"RSAPrivateKey.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, toBase64, arrayBufferToString, stringToArrayBuffer, fromBase64, clearProps } from \"pvutils\";\r\nimport OtherPrimeInfo from \"./OtherPrimeInfo.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC3447\r\n */\r\nexport default class RSAPrivateKey\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSAPrivateKey class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @description version\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", RSAPrivateKey.defaultValues(\"version\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description modulus\r\n\t\t */\r\n\t\tthis.modulus = getParametersValue(parameters, \"modulus\", RSAPrivateKey.defaultValues(\"modulus\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description publicExponent\r\n\t\t */\r\n\t\tthis.publicExponent = getParametersValue(parameters, \"publicExponent\", RSAPrivateKey.defaultValues(\"publicExponent\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description privateExponent\r\n\t\t */\r\n\t\tthis.privateExponent = getParametersValue(parameters, \"privateExponent\", RSAPrivateKey.defaultValues(\"privateExponent\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description prime1\r\n\t\t */\r\n\t\tthis.prime1 = getParametersValue(parameters, \"prime1\", RSAPrivateKey.defaultValues(\"prime1\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description prime2\r\n\t\t */\r\n\t\tthis.prime2 = getParametersValue(parameters, \"prime2\", RSAPrivateKey.defaultValues(\"prime2\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description exponent1\r\n\t\t */\r\n\t\tthis.exponent1 = getParametersValue(parameters, \"exponent1\", RSAPrivateKey.defaultValues(\"exponent1\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description exponent2\r\n\t\t */\r\n\t\tthis.exponent2 = getParametersValue(parameters, \"exponent2\", RSAPrivateKey.defaultValues(\"exponent2\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description coefficient\r\n\t\t */\r\n\t\tthis.coefficient = getParametersValue(parameters, \"coefficient\", RSAPrivateKey.defaultValues(\"coefficient\"));\r\n\r\n\t\tif(\"otherPrimeInfos\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<OtherPrimeInfo>}\r\n\t\t\t * @description otherPrimeInfos\r\n\t\t\t */\r\n\t\t\tthis.otherPrimeInfos = getParametersValue(parameters, \"otherPrimeInfos\", RSAPrivateKey.defaultValues(\"otherPrimeInfos\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t\t//region If input argument array contains \"json\" for this object\r\n\t\tif(\"json\" in parameters)\r\n\t\t\tthis.fromJSON(parameters.json);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"modulus\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"publicExponent\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"privateExponent\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"prime1\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"prime2\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"exponent1\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"exponent2\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"coefficient\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"otherPrimeInfos\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSAPrivateKey class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//RSAPrivateKey ::= Sequence {\r\n\t\t//    version           Version,\r\n\t\t//    modulus           Integer,  -- n\r\n\t\t//    publicExponent    Integer,  -- e\r\n\t\t//    privateExponent   Integer,  -- d\r\n\t\t//    prime1            Integer,  -- p\r\n\t\t//    prime2            Integer,  -- q\r\n\t\t//    exponent1         Integer,  -- d mod (p-1)\r\n\t\t//    exponent2         Integer,  -- d mod (q-1)\r\n\t\t//    coefficient       Integer,  -- (inverse of q) mod p\r\n\t\t//    otherPrimeInfos   OtherPrimeInfos OPTIONAL\r\n\t\t//}\r\n\t\t//\r\n\t\t//OtherPrimeInfos ::= Sequence SIZE(1..MAX) OF OtherPrimeInfo\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [version]\r\n\t\t * @property {string} [modulus]\r\n\t\t * @property {string} [publicExponent]\r\n\t\t * @property {string} [privateExponent]\r\n\t\t * @property {string} [prime1]\r\n\t\t * @property {string} [prime2]\r\n\t\t * @property {string} [exponent1]\r\n\t\t * @property {string} [exponent2]\r\n\t\t * @property {string} [coefficient]\r\n\t\t * @property {string} [otherPrimeInfosName]\r\n\t\t * @property {Object} [otherPrimeInfo]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: (names.version || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.modulus || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.publicExponent || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.privateExponent || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.prime1 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.prime2 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.exponent1 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.exponent2 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.coefficient || \"\") }),\r\n\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.otherPrimeInfosName || \"\"),\r\n\t\t\t\t\t\t\tvalue: OtherPrimeInfo.schema(names.otherPrimeInfo || {})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"version\",\r\n\t\t\t\"modulus\",\r\n\t\t\t\"publicExponent\",\r\n\t\t\t\"privateExponent\",\r\n\t\t\t\"prime1\",\r\n\t\t\t\"prime2\",\r\n\t\t\t\"exponent1\",\r\n\t\t\t\"exponent2\",\r\n\t\t\t\"coefficient\",\r\n\t\t\t\"otherPrimeInfos\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSAPrivateKey.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tversion: \"version\",\r\n\t\t\t\t\tmodulus: \"modulus\",\r\n\t\t\t\t\tpublicExponent: \"publicExponent\",\r\n\t\t\t\t\tprivateExponent: \"privateExponent\",\r\n\t\t\t\t\tprime1: \"prime1\",\r\n\t\t\t\t\tprime2: \"prime2\",\r\n\t\t\t\t\texponent1: \"exponent1\",\r\n\t\t\t\t\texponent2: \"exponent2\",\r\n\t\t\t\t\tcoefficient: \"coefficient\",\r\n\t\t\t\t\totherPrimeInfo: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"otherPrimeInfos\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSAPrivateKey\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.version = asn1.result.version.valueBlock.valueDec;\r\n\t\tthis.modulus = asn1.result.modulus.convertFromDER(256);\r\n\t\tthis.publicExponent = asn1.result.publicExponent;\r\n\t\tthis.privateExponent = asn1.result.privateExponent.convertFromDER(256);\r\n\t\tthis.prime1 = asn1.result.prime1.convertFromDER(128);\r\n\t\tthis.prime2 = asn1.result.prime2.convertFromDER(128);\r\n\t\tthis.exponent1 = asn1.result.exponent1.convertFromDER(128);\r\n\t\tthis.exponent2 = asn1.result.exponent2.convertFromDER(128);\r\n\t\tthis.coefficient = asn1.result.coefficient.convertFromDER(128);\r\n\r\n\t\tif(\"otherPrimeInfos\" in asn1.result)\r\n\t\t\tthis.otherPrimeInfos = Array.from(asn1.result.otherPrimeInfos, element => new OtherPrimeInfo({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(new asn1js.Integer({ value: this.version }));\r\n\t\toutputArray.push(this.modulus.convertToDER());\r\n\t\toutputArray.push(this.publicExponent);\r\n\t\toutputArray.push(this.privateExponent.convertToDER());\r\n\t\toutputArray.push(this.prime1.convertToDER());\r\n\t\toutputArray.push(this.prime2.convertToDER());\r\n\t\toutputArray.push(this.exponent1.convertToDER());\r\n\t\toutputArray.push(this.exponent2.convertToDER());\r\n\t\toutputArray.push(this.coefficient.convertToDER());\r\n\t\t\r\n\t\tif(\"otherPrimeInfos\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Sequence({\r\n\t\t\t\tvalue: Array.from(this.otherPrimeInfos, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst jwk = {\r\n\t\t\tn: toBase64(arrayBufferToString(this.modulus.valueBlock.valueHex), true, true, true),\r\n\t\t\te: toBase64(arrayBufferToString(this.publicExponent.valueBlock.valueHex), true, true, true),\r\n\t\t\td: toBase64(arrayBufferToString(this.privateExponent.valueBlock.valueHex), true, true, true),\r\n\t\t\tp: toBase64(arrayBufferToString(this.prime1.valueBlock.valueHex), true, true, true),\r\n\t\t\tq: toBase64(arrayBufferToString(this.prime2.valueBlock.valueHex), true, true, true),\r\n\t\t\tdp: toBase64(arrayBufferToString(this.exponent1.valueBlock.valueHex), true, true, true),\r\n\t\t\tdq: toBase64(arrayBufferToString(this.exponent2.valueBlock.valueHex), true, true, true),\r\n\t\t\tqi: toBase64(arrayBufferToString(this.coefficient.valueBlock.valueHex), true, true, true)\r\n\t\t};\r\n\r\n\t\tif(\"otherPrimeInfos\" in this)\r\n\t\t\tjwk.oth = Array.from(this.otherPrimeInfos, element => element.toJSON());\r\n\r\n\t\treturn jwk;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert JSON value into current object\r\n\t * @param {Object} json\r\n\t */\r\n\tfromJSON(json)\r\n\t{\r\n\t\tif(\"n\" in json)\r\n\t\t\tthis.modulus = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.n, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"n\\\"\");\r\n\r\n\t\tif(\"e\" in json)\r\n\t\t\tthis.publicExponent = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.e, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"e\\\"\");\r\n\r\n\t\tif(\"d\" in json)\r\n\t\t\tthis.privateExponent = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.d, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"d\\\"\");\r\n\r\n\t\tif(\"p\" in json)\r\n\t\t\tthis.prime1 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.p, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"p\\\"\");\r\n\r\n\t\tif(\"q\" in json)\r\n\t\t\tthis.prime2 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.q, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"q\\\"\");\r\n\r\n\t\tif(\"dp\" in json)\r\n\t\t\tthis.exponent1 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.dp, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"dp\\\"\");\r\n\r\n\t\tif(\"dq\" in json)\r\n\t\t\tthis.exponent2 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.dq, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"dq\\\"\");\r\n\r\n\t\tif(\"qi\" in json)\r\n\t\t\tthis.coefficient = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.qi, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"qi\\\"\");\r\n\r\n\t\tif(\"oth\" in json)\r\n\t\t\tthis.otherPrimeInfos = Array.from(json.oth, element => new OtherPrimeInfo({ json: element }));\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}