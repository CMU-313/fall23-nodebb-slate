{"version":3,"sources":["../src/RSASSAPSSParams.js"],"names":["asn1js","RSASSAPSSParams","constructor","parameters","hashAlgorithm","defaultValues","maskGenAlgorithm","saltLength","trailerField","fromSchema","schema","memberName","algorithmId","algorithmParams","Null","toSchema","Error","names","Sequence","name","blockName","value","Constructed","idBlock","tagClass","tagNumber","optional","Integer","asn1","compareSchema","verified","result","valueBlock","valueDec","outputArray","isEqual","push","toJSON","object"],"mappings":"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","file":"RSASSAPSSParams.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC4055\r\n */\r\nexport default class RSASSAPSSParams\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSASSAPSSParams class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @description Algorithms of hashing (DEFAULT sha1)\r\n\t\t */\r\n\t\tthis.hashAlgorithm = getParametersValue(parameters, \"hashAlgorithm\", RSASSAPSSParams.defaultValues(\"hashAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @description Algorithm of \"mask generaion function (MGF)\" (DEFAULT mgf1SHA1)\r\n\t\t */\r\n\t\tthis.maskGenAlgorithm = getParametersValue(parameters, \"maskGenAlgorithm\", RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @description Salt length (DEFAULT 20)\r\n\t\t */\r\n\t\tthis.saltLength = getParametersValue(parameters, \"saltLength\", RSASSAPSSParams.defaultValues(\"saltLength\"));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @description (DEFAULT 1)\r\n\t\t */\r\n\t\tthis.trailerField = getParametersValue(parameters, \"trailerField\", RSASSAPSSParams.defaultValues(\"trailerField\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"hashAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t});\r\n\t\t\tcase \"maskGenAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.2.840.113549.1.1.8\", // MGF1\r\n\t\t\t\t\talgorithmParams: (new AlgorithmIdentifier({\r\n\t\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t\t})).toSchema()\r\n\t\t\t\t});\r\n\t\t\tcase \"saltLength\":\r\n\t\t\t\treturn 20;\r\n\t\t\tcase \"trailerField\":\r\n\t\t\t\treturn 1;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSASSAPSSParams class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//RSASSA-PSS-params  ::=  Sequence  {\r\n\t\t//    hashAlgorithm      [0] HashAlgorithm DEFAULT sha1Identifier,\r\n\t\t//    maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT mgf1SHA1Identifier,\r\n\t\t//    saltLength         [2] Integer DEFAULT 20,\r\n\t\t//    trailerField       [3] Integer DEFAULT 1  }\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [hashAlgorithm]\r\n\t\t * @property {string} [maskGenAlgorithm]\r\n\t\t * @property {string} [saltLength]\r\n\t\t * @property {string} [trailerField]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.hashAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.maskGenAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.saltLength || \"\") })]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.trailerField || \"\") })]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"hashAlgorithm\",\r\n\t\t\t\"maskGenAlgorithm\",\r\n\t\t\t\"saltLength\",\r\n\t\t\t\"trailerField\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSASSAPSSParams.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\thashAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"hashAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmaskGenAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"maskGenAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsaltLength: \"saltLength\",\r\n\t\t\t\t\ttrailerField: \"trailerField\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSASSAPSSParams\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"hashAlgorithm\" in asn1.result)\r\n\t\t\tthis.hashAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.hashAlgorithm });\r\n\r\n\t\tif(\"maskGenAlgorithm\" in asn1.result)\r\n\t\t\tthis.maskGenAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.maskGenAlgorithm });\r\n\r\n\t\tif(\"saltLength\" in asn1.result)\r\n\t\t\tthis.saltLength = asn1.result.saltLength.valueBlock.valueDec;\r\n\r\n\t\tif(\"trailerField\" in asn1.result)\r\n\t\t\tthis.trailerField = asn1.result.trailerField.valueBlock.valueDec;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(!this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.hashAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.maskGenAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.saltLength !== RSASSAPSSParams.defaultValues(\"saltLength\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [new asn1js.Integer({ value: this.saltLength })]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.trailerField !== RSASSAPSSParams.defaultValues(\"trailerField\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [new asn1js.Integer({ value: this.trailerField })]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(!this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t\tobject.hashAlgorithm = this.hashAlgorithm.toJSON();\r\n\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t\tobject.maskGenAlgorithm = this.maskGenAlgorithm.toJSON();\r\n\r\n\t\tif(this.saltLength !== RSASSAPSSParams.defaultValues(\"saltLength\"))\r\n\t\t\tobject.saltLength = this.saltLength;\r\n\r\n\t\tif(this.trailerField !== RSASSAPSSParams.defaultValues(\"trailerField\"))\r\n\t\t\tobject.trailerField = this.trailerField;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}