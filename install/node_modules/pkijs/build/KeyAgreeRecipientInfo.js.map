{"version":3,"sources":["../src/KeyAgreeRecipientInfo.js"],"names":["asn1js","KeyAgreeRecipientInfo","constructor","parameters","version","defaultValues","originator","ukm","keyEncryptionAlgorithm","recipientEncryptedKeys","recipientCertificate","fromSchema","schema","memberName","OctetString","Error","compareWithDefault","memberValue","variant","isEqual","algorithmId","encryptedKeys","length","names","Sequence","name","blockName","value","Integer","Constructed","idBlock","tagClass","tagNumber","optional","asn1","compareSchema","verified","result","valueBlock","valueDec","toSchema","outputArray","push","toJSON","_object"],"mappings":"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","file":"KeyAgreeRecipientInfo.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport OriginatorIdentifierOrKey from \"./OriginatorIdentifierOrKey.js\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\nimport RecipientEncryptedKeys from \"./RecipientEncryptedKeys.js\";\r\nimport Certificate from \"./Certificate.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class KeyAgreeRecipientInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for KeyAgreeRecipientInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @description version\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", KeyAgreeRecipientInfo.defaultValues(\"version\"));\r\n\t\t/**\r\n\t\t * @type {OriginatorIdentifierOrKey}\r\n\t\t * @description originator\r\n\t\t */\r\n\t\tthis.originator = getParametersValue(parameters, \"originator\", KeyAgreeRecipientInfo.defaultValues(\"originator\"));\r\n\r\n\t\tif(\"ukm\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {OctetString}\r\n\t\t\t * @description ukm\r\n\t\t\t */\r\n\t\t\tthis.ukm = getParametersValue(parameters, \"ukm\", KeyAgreeRecipientInfo.defaultValues(\"ukm\"));\r\n\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @description keyEncryptionAlgorithm\r\n\t\t */\r\n\t\tthis.keyEncryptionAlgorithm = getParametersValue(parameters, \"keyEncryptionAlgorithm\", KeyAgreeRecipientInfo.defaultValues(\"keyEncryptionAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {RecipientEncryptedKeys}\r\n\t\t * @description recipientEncryptedKeys\r\n\t\t */\r\n\t\tthis.recipientEncryptedKeys = getParametersValue(parameters, \"recipientEncryptedKeys\", KeyAgreeRecipientInfo.defaultValues(\"recipientEncryptedKeys\"));\r\n\t\t/**\r\n\t\t * @type {Certificate}\r\n\t\t * @description recipientCertificate For some reasons we need to store recipient's certificate here\r\n\t\t */\r\n\t\tthis.recipientCertificate = getParametersValue(parameters, \"recipientCertificate\", KeyAgreeRecipientInfo.defaultValues(\"recipientCertificate\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"originator\":\r\n\t\t\t\treturn new OriginatorIdentifierOrKey();\r\n\t\t\tcase \"ukm\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"keyEncryptionAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tcase \"recipientEncryptedKeys\":\r\n\t\t\t\treturn new RecipientEncryptedKeys();\r\n\t\t\tcase \"recipientCertificate\":\r\n\t\t\t\treturn new Certificate();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for KeyAgreeRecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn (memberValue === 0);\r\n\t\t\tcase \"originator\":\r\n\t\t\t\treturn ((memberValue.variant === (-1)) && ((\"value\" in memberValue) === false));\r\n\t\t\tcase \"ukm\":\r\n\t\t\t\treturn (memberValue.isEqual(KeyAgreeRecipientInfo.defaultValues(\"ukm\")));\r\n\t\t\tcase \"keyEncryptionAlgorithm\":\r\n\t\t\t\treturn ((memberValue.algorithmId === \"\") && ((\"algorithmParams\" in memberValue) === false));\r\n\t\t\tcase \"recipientEncryptedKeys\":\r\n\t\t\t\treturn (memberValue.encryptedKeys.length === 0);\r\n\t\t\tcase \"recipientCertificate\":\r\n\t\t\t\treturn false; // For now leave it as is\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for KeyAgreeRecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//KeyAgreeRecipientInfo ::= SEQUENCE {\r\n\t\t//    version CMSVersion,  -- always set to 3\r\n\t\t//    originator [0] EXPLICIT OriginatorIdentifierOrKey,\r\n\t\t//    ukm [1] EXPLICIT UserKeyingMaterial OPTIONAL,\r\n\t\t//    keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,\r\n\t\t//    recipientEncryptedKeys RecipientEncryptedKeys }\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [version]\r\n\t\t * @property {string} [originator]\r\n\t\t * @property {string} [ukm]\r\n\t\t * @property {string} [keyEncryptionAlgorithm]\r\n\t\t * @property {string} [recipientEncryptedKeys]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: names.blockName || \"\",\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: names.version || \"\" }),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tOriginatorIdentifierOrKey.schema(names.originator || {})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.OctetString({ name: names.ukm || \"\" })]\r\n\t\t\t\t}),\r\n\t\t\t\tAlgorithmIdentifier.schema(names.keyEncryptionAlgorithm || {}),\r\n\t\t\t\tRecipientEncryptedKeys.schema(names.recipientEncryptedKeys || {})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"version\",\r\n\t\t\t\"originator\",\r\n\t\t\t\"ukm\",\r\n\t\t\t\"keyEncryptionAlgorithm\",\r\n\t\t\t\"recipientEncryptedKeys\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tKeyAgreeRecipientInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tversion: \"version\",\r\n\t\t\t\t\toriginator: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"originator\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tukm: \"ukm\",\r\n\t\t\t\t\tkeyEncryptionAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"keyEncryptionAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\trecipientEncryptedKeys: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"recipientEncryptedKeys\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for KeyAgreeRecipientInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.version = asn1.result.version.valueBlock.valueDec;\r\n\t\tthis.originator = new OriginatorIdentifierOrKey({ schema: asn1.result.originator });\r\n\r\n\t\tif(\"ukm\" in asn1.result)\r\n\t\t\tthis.ukm = asn1.result.ukm;\r\n\r\n\t\tthis.keyEncryptionAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.keyEncryptionAlgorithm });\r\n\t\tthis.recipientEncryptedKeys = new RecipientEncryptedKeys({ schema: asn1.result.recipientEncryptedKeys });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for final sequence\r\n\t\tconst outputArray = [];\r\n\r\n\t\toutputArray.push(new asn1js.Integer({ value: this.version }));\r\n\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\tidBlock: {\r\n\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t},\r\n\t\t\tvalue: [this.originator.toSchema()]\r\n\t\t}));\r\n\r\n\t\tif(\"ukm\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\toptional: true,\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.ukm]\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\toutputArray.push(this.keyEncryptionAlgorithm.toSchema());\r\n\t\toutputArray.push(this.recipientEncryptedKeys.toSchema());\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tversion: this.version,\r\n\t\t\toriginator: this.originator.toJSON()\r\n\t\t};\r\n\r\n\t\tif(\"ukm\" in this)\r\n\t\t\t_object.ukm = this.ukm.toJSON();\r\n\r\n\t\t_object.keyEncryptionAlgorithm = this.keyEncryptionAlgorithm.toJSON();\r\n\t\t_object.recipientEncryptedKeys = this.recipientEncryptedKeys.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}