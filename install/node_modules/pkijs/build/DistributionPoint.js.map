{"version":3,"sources":["../src/DistributionPoint.js"],"names":["asn1js","DistributionPoint","constructor","parameters","distributionPoint","defaultValues","reasons","cRLIssuer","fromSchema","schema","memberName","BitString","Error","names","Sequence","name","blockName","value","Constructed","optional","idBlock","tagClass","tagNumber","Choice","Repeated","distributionPointNames","valueBlock","Primitive","cRLIssuerNames","asn1","compareSchema","verified","result","Array","from","element","valueHex","toSchema","outputArray","internalValue","push","toJSON","object"],"mappings":"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","file":"DistributionPoint.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport GeneralName from \"./GeneralName.js\";\r\nimport RelativeDistinguishedNames from \"./RelativeDistinguishedNames.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class DistributionPoint\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for DistributionPoint class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t * @property {Object} [distributionPoint]\r\n\t * @property {Object} [reasons]\r\n\t * @property {Object} [cRLIssuer]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"distributionPoint\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<GeneralName>}\r\n\t\t\t * @description distributionPoint\r\n\t\t\t */\r\n\t\t\tthis.distributionPoint = getParametersValue(parameters, \"distributionPoint\", DistributionPoint.defaultValues(\"distributionPoint\"));\r\n\r\n\t\tif(\"reasons\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {BitString}\r\n\t\t\t * @description values\r\n\t\t\t */\r\n\t\t\tthis.reasons = getParametersValue(parameters, \"reasons\", DistributionPoint.defaultValues(\"reasons\"));\r\n\r\n\t\tif(\"cRLIssuer\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<GeneralName>}\r\n\t\t\t * @description cRLIssuer\r\n\t\t\t */\r\n\t\t\tthis.cRLIssuer = getParametersValue(parameters, \"cRLIssuer\", DistributionPoint.defaultValues(\"cRLIssuer\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"distributionPoint\":\r\n\t\t\t\treturn [];\r\n\t\t\tcase \"reasons\":\r\n\t\t\t\treturn new asn1js.BitString();\r\n\t\t\tcase \"cRLIssuer\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for DistributionPoint class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//DistributionPoint ::= SEQUENCE {\r\n\t\t//    distributionPoint       [0]     DistributionPointName OPTIONAL,\r\n\t\t//    reasons                 [1]     ReasonFlags OPTIONAL,\r\n\t\t//    cRLIssuer               [2]     GeneralNames OPTIONAL }\r\n\t\t//\r\n\t\t//DistributionPointName ::= CHOICE {\r\n\t\t//    fullName                [0]     GeneralNames,\r\n\t\t//    nameRelativeToCRLIssuer [1]     RelativeDistinguishedName }\r\n\t\t//\r\n\t\t//ReasonFlags ::= BIT STRING {\r\n\t\t//    unused                  (0),\r\n\t\t//    keyCompromise           (1),\r\n\t\t//    cACompromise            (2),\r\n\t\t//    affiliationChanged      (3),\r\n\t\t//    superseded              (4),\r\n\t\t//    cessationOfOperation    (5),\r\n\t\t//    certificateHold         (6),\r\n\t\t//    privilegeWithdrawn      (7),\r\n\t\t//    aACompromise            (8) }\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [distributionPoint]\r\n\t\t * @property {string} [distributionPointNames]\r\n\t\t * @property {string} [reasons]\r\n\t\t * @property {string} [cRLIssuer]\r\n\t\t * @property {string} [cRLIssuerNames]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\t\t\tname: (names.distributionPoint || \"\"),\r\n\t\t\t\t\t\t\t\t\toptional: true,\r\n\t\t\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\t\t\t\t\tname: (names.distributionPointNames || \"\"),\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: GeneralName.schema()\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\t\t\tname: (names.distributionPoint || \"\"),\r\n\t\t\t\t\t\t\t\t\toptional: true,\r\n\t\t\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tvalue: RelativeDistinguishedNames.schema().valueBlock.value\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.reasons || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t}\r\n\t\t\t\t}), // IMPLICIT bitstring value\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.cRLIssuer || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.cRLIssuerNames || \"\"),\r\n\t\t\t\t\t\t\tvalue: GeneralName.schema()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}) // IMPLICIT bitstring value\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"distributionPoint\",\r\n\t\t\t\"distributionPointNames\",\r\n\t\t\t\"reasons\",\r\n\t\t\t\"cRLIssuer\",\r\n\t\t\t\"cRLIssuerNames\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tDistributionPoint.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tdistributionPoint: \"distributionPoint\",\r\n\t\t\t\t\tdistributionPointNames: \"distributionPointNames\",\r\n\t\t\t\t\treasons: \"reasons\",\r\n\t\t\t\t\tcRLIssuer: \"cRLIssuer\",\r\n\t\t\t\t\tcRLIssuerNames: \"cRLIssuerNames\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for DistributionPoint\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"distributionPoint\" in asn1.result)\r\n\t\t{\r\n\t\t\tif(asn1.result.distributionPoint.idBlock.tagNumber === 0) // GENERAL_NAMES variant\r\n\t\t\t\tthis.distributionPoint = Array.from(asn1.result.distributionPointNames, element => new GeneralName({ schema: element }));\r\n\r\n\t\t\tif(asn1.result.distributionPoint.idBlock.tagNumber === 1) // RDN variant\r\n\t\t\t{\r\n\t\t\t\tthis.distributionPoint = new RelativeDistinguishedNames({\r\n\t\t\t\t\tschema: new asn1js.Sequence({\r\n\t\t\t\t\t\tvalue: asn1.result.distributionPoint.valueBlock.value\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(\"reasons\" in asn1.result)\r\n\t\t\tthis.reasons = new asn1js.BitString({ valueHex: asn1.result.reasons.valueBlock.valueHex });\r\n\r\n\t\tif(\"cRLIssuer\" in asn1.result)\r\n\t\t\tthis.cRLIssuer = Array.from(asn1.result.cRLIssuerNames, element => new GeneralName({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"distributionPoint\" in this)\r\n\t\t{\r\n\t\t\tlet internalValue;\r\n\t\t\t\r\n\t\t\tif(this.distributionPoint instanceof Array)\r\n\t\t\t{\r\n\t\t\t\tinternalValue = new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: Array.from(this.distributionPoint, element => element.toSchema())\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tinternalValue = new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.distributionPoint.toSchema()]\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [internalValue]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"reasons\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: this.reasons.valueBlock.valueHex\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"cRLIssuer\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: Array.from(this.cRLIssuer, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(\"distributionPoint\" in this)\r\n\t\t{\r\n\t\t\tif(this.distributionPoint instanceof Array)\r\n\t\t\t\tobject.distributionPoint = Array.from(this.distributionPoint, element => element.toJSON());\r\n\t\t\telse\r\n\t\t\t\tobject.distributionPoint = this.distributionPoint.toJSON();\r\n\t\t}\r\n\r\n\t\tif(\"reasons\" in this)\r\n\t\t\tobject.reasons = this.reasons.toJSON();\r\n\r\n\t\tif(\"cRLIssuer\" in this)\r\n\t\t\tobject.cRLIssuer = Array.from(this.cRLIssuer, element => element.toJSON());\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}