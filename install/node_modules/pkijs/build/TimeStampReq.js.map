{"version":3,"sources":["../src/TimeStampReq.js"],"names":["asn1js","TimeStampReq","constructor","parameters","version","defaultValues","messageImprint","reqPolicy","nonce","certReq","extensions","fromSchema","schema","memberName","Integer","Error","compareWithDefault","memberValue","hashAlgorithm","hashedMessage","isEqual","length","names","Sequence","name","blockName","value","ObjectIdentifier","optional","Boolean","Constructed","idBlock","tagClass","tagNumber","Repeated","asn1","compareSchema","verified","result","valueBlock","valueDec","toString","Array","from","element","toSchema","outputArray","push","toJSON","_object"],"mappings":"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","file":"TimeStampReq.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport MessageImprint from \"./MessageImprint.js\";\r\nimport Extension from \"./Extension.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC3161\r\n */\r\nexport default class TimeStampReq\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for TimeStampReq class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @description version\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", TimeStampReq.defaultValues(\"version\"));\r\n\t\t/**\r\n\t\t * @type {MessageImprint}\r\n\t\t * @description messageImprint\r\n\t\t */\r\n\t\tthis.messageImprint = getParametersValue(parameters, \"messageImprint\", TimeStampReq.defaultValues(\"messageImprint\"));\r\n\r\n\t\tif(\"reqPolicy\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {string}\r\n\t\t\t * @description reqPolicy\r\n\t\t\t */\r\n\t\t\tthis.reqPolicy = getParametersValue(parameters, \"reqPolicy\", TimeStampReq.defaultValues(\"reqPolicy\"));\r\n\r\n\t\tif(\"nonce\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Integer}\r\n\t\t\t * @description nonce\r\n\t\t\t */\r\n\t\t\tthis.nonce = getParametersValue(parameters, \"nonce\", TimeStampReq.defaultValues(\"nonce\"));\r\n\r\n\t\tif(\"certReq\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {boolean}\r\n\t\t\t * @description certReq\r\n\t\t\t */\r\n\t\t\tthis.certReq = getParametersValue(parameters, \"certReq\", TimeStampReq.defaultValues(\"certReq\"));\r\n\r\n\t\tif(\"extensions\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<Extension>}\r\n\t\t\t * @description extensions\r\n\t\t\t */\r\n\t\t\tthis.extensions = getParametersValue(parameters, \"extensions\", TimeStampReq.defaultValues(\"extensions\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"messageImprint\":\r\n\t\t\t\treturn new MessageImprint();\r\n\t\t\tcase \"reqPolicy\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"nonce\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"certReq\":\r\n\t\t\t\treturn false;\r\n\t\t\tcase \"extensions\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for TimeStampReq class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\tcase \"reqPolicy\":\r\n\t\t\tcase \"certReq\":\r\n\t\t\t\treturn (memberValue === TimeStampReq.defaultValues(memberName));\r\n\t\t\tcase \"messageImprint\":\r\n\t\t\t\treturn ((MessageImprint.compareWithDefault(\"hashAlgorithm\", memberValue.hashAlgorithm)) &&\r\n\t\t\t\t\t\t(MessageImprint.compareWithDefault(\"hashedMessage\", memberValue.hashedMessage)));\r\n\t\t\tcase \"nonce\":\r\n\t\t\t\treturn (memberValue.isEqual(TimeStampReq.defaultValues(memberName)));\r\n\t\t\tcase \"extensions\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for TimeStampReq class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//TimeStampReq ::= SEQUENCE  {\r\n\t\t//    version               INTEGER  { v1(1) },\r\n\t\t//    messageImprint        MessageImprint,\r\n\t\t//    reqPolicy             TSAPolicyId              OPTIONAL,\r\n\t\t//    nonce                 INTEGER                  OPTIONAL,\r\n\t\t//    certReq               BOOLEAN                  DEFAULT FALSE,\r\n\t\t//    extensions            [0] IMPLICIT Extensions  OPTIONAL  }\r\n\t\t//\r\n\t\t//TSAPolicyId ::= OBJECT IDENTIFIER\r\n\t\t\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [type]\r\n\t\t * @property {string} [setName]\r\n\t\t * @property {string} [values]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"TimeStampReq\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: (names.version || \"TimeStampReq.version\") }),\r\n\t\t\t\tMessageImprint.schema(names.messageImprint || {\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\tblockName: \"TimeStampReq.messageImprint\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.ObjectIdentifier({\r\n\t\t\t\t\tname: (names.reqPolicy || \"TimeStampReq.reqPolicy\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Integer({\r\n\t\t\t\t\tname: (names.nonce || \"TimeStampReq.nonce\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Boolean({\r\n\t\t\t\t\tname: (names.certReq || \"TimeStampReq.certReq\"),\r\n\t\t\t\t\toptional: true\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Repeated({\r\n\t\t\t\t\t\tname: (names.extensions || \"TimeStampReq.extensions\"),\r\n\t\t\t\t\t\tvalue: Extension.schema()\r\n\t\t\t\t\t})]\r\n\t\t\t\t}) // IMPLICIT SEQUENCE value\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"TimeStampReq.version\",\r\n\t\t\t\"TimeStampReq.messageImprint\",\r\n\t\t\t\"TimeStampReq.reqPolicy\",\r\n\t\t\t\"TimeStampReq.nonce\",\r\n\t\t\t\"TimeStampReq.certReq\",\r\n\t\t\t\"TimeStampReq.extensions\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tTimeStampReq.schema()\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for TimeStampReq\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.version = asn1.result[\"TimeStampReq.version\"].valueBlock.valueDec;\r\n\t\tthis.messageImprint = new MessageImprint({ schema: asn1.result[\"TimeStampReq.messageImprint\"] });\r\n\t\tif(\"TimeStampReq.reqPolicy\" in asn1.result)\r\n\t\t\tthis.reqPolicy = asn1.result[\"TimeStampReq.reqPolicy\"].valueBlock.toString();\r\n\t\tif(\"TimeStampReq.nonce\" in asn1.result)\r\n\t\t\tthis.nonce = asn1.result[\"TimeStampReq.nonce\"];\r\n\t\tif(\"TimeStampReq.certReq\" in asn1.result)\r\n\t\t\tthis.certReq = asn1.result[\"TimeStampReq.certReq\"].valueBlock.value;\r\n\t\tif(\"TimeStampReq.extensions\" in asn1.result)\r\n\t\t\tthis.extensions = Array.from(asn1.result[\"TimeStampReq.extensions\"], element => new Extension({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\r\n\t\toutputArray.push(new asn1js.Integer({ value: this.version }));\r\n\t\toutputArray.push(this.messageImprint.toSchema());\r\n\t\tif(\"reqPolicy\" in this)\r\n\t\t\toutputArray.push(new asn1js.ObjectIdentifier({ value: this.reqPolicy }));\r\n\t\tif(\"nonce\" in this)\r\n\t\t\toutputArray.push(this.nonce);\r\n\t\tif((\"certReq\" in this) && (TimeStampReq.compareWithDefault(\"certReq\", this.certReq) === false))\r\n\t\t\toutputArray.push(new asn1js.Boolean({ value: this.certReq }));\r\n\r\n\t\t//region Create array of extensions\r\n\t\tif(\"extensions\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: Array.from(this.extensions, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tversion: this.version,\r\n\t\t\tmessageImprint: this.messageImprint.toJSON()\r\n\t\t};\r\n\r\n\t\tif(\"reqPolicy\" in this)\r\n\t\t\t_object.reqPolicy = this.reqPolicy;\r\n\r\n\t\tif(\"nonce\" in this)\r\n\t\t\t_object.nonce = this.nonce.toJSON();\r\n\r\n\t\tif((\"certReq\" in this) && (TimeStampReq.compareWithDefault(\"certReq\", this.certReq) === false))\r\n\t\t\t_object.certReq = this.certReq;\r\n\r\n\t\tif(\"extensions\" in this)\r\n\t\t\t_object.extensions = Array.from(this.extensions, element => element.toJSON());\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}