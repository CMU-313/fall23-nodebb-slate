{"version":3,"sources":["../src/KeyAgreeRecipientIdentifier.js"],"names":["asn1js","KeyAgreeRecipientIdentifier","constructor","parameters","variant","defaultValues","value","fromSchema","schema","memberName","Error","compareWithDefault","memberValue","Object","keys","length","names","Choice","issuerAndSerialNumber","blockName","Constructed","name","idBlock","tagClass","tagNumber","rKeyId","valueBlock","asn1","compareSchema","verified","result","Sequence","toSchema","Any","toJSON","_object"],"mappings":"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","file":"KeyAgreeRecipientIdentifier.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport IssuerAndSerialNumber from \"./IssuerAndSerialNumber.js\";\r\nimport RecipientKeyIdentifier from \"./RecipientKeyIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class KeyAgreeRecipientIdentifier\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for KeyAgreeRecipientIdentifier class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @description variant\r\n\t\t */\r\n\t\tthis.variant = getParametersValue(parameters, \"variant\", KeyAgreeRecipientIdentifier.defaultValues(\"variant\"));\r\n\t\t/**\r\n\t\t * @type {*}\r\n\t\t * @description values\r\n\t\t */\r\n\t\tthis.value = getParametersValue(parameters, \"value\", KeyAgreeRecipientIdentifier.defaultValues(\"value\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (-1);\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for KeyAgreeRecipientIdentifier class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (memberValue === (-1));\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for KeyAgreeRecipientIdentifier class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//KeyAgreeRecipientIdentifier ::= CHOICE {\r\n\t\t//    issuerAndSerialNumber IssuerAndSerialNumber,\r\n\t\t//    rKeyId [0] IMPLICIT RecipientKeyIdentifier }\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [issuerAndSerialNumber]\r\n\t\t * @property {string} [rKeyId]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Choice({\r\n\t\t\tvalue: [\r\n\t\t\t\tIssuerAndSerialNumber.schema(names.issuerAndSerialNumber || {\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\tblockName: (names.blockName || \"\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: RecipientKeyIdentifier.schema(names.rKeyId || {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: (names.blockName || \"\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"blockName\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tKeyAgreeRecipientIdentifier.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"blockName\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for KeyAgreeRecipientIdentifier\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(asn1.result.blockName.idBlock.tagClass === 1)\r\n\t\t{\r\n\t\t\tthis.variant = 1;\r\n\t\t\tthis.value = new IssuerAndSerialNumber({ schema: asn1.result.blockName });\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.variant = 2;\r\n\r\n\t\t\tthis.value = new RecipientKeyIdentifier({\r\n\t\t\t\tschema: new asn1js.Sequence({\r\n\t\t\t\t\tvalue: asn1.result.blockName.valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\tswitch(this.variant)\r\n\t\t{\r\n\t\t\tcase 1:\r\n\t\t\t\treturn this.value.toSchema();\r\n\t\t\tcase 2:\r\n\t\t\t\treturn new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: this.value.toSchema().valueBlock.value\r\n\t\t\t\t});\r\n\t\t\tdefault:\r\n\t\t\t\treturn new asn1js.Any();\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tvariant: this.variant\r\n\t\t};\r\n\r\n\t\tif((this.variant === 1) || (this.variant === 2))\r\n\t\t\t_object.value = this.value.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}