{"version":3,"sources":["../src/IssuingDistributionPoint.js"],"names":["asn1js","IssuingDistributionPoint","constructor","parameters","distributionPoint","defaultValues","onlyContainsUserCerts","onlyContainsCACerts","onlySomeReasons","indirectCRL","onlyContainsAttributeCerts","fromSchema","schema","memberName","Error","names","Sequence","name","blockName","value","Constructed","optional","idBlock","tagClass","tagNumber","Choice","Repeated","distributionPointNames","valueBlock","Primitive","asn1","compareSchema","verified","result","Array","from","element","view","Uint8Array","valueHex","toSchema","outputArray","push","buffer","ArrayBuffer","toJSON","object"],"mappings":"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","file":"IssuingDistributionPoint.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport GeneralName from \"./GeneralName.js\";\r\nimport RelativeDistinguishedNames from \"./RelativeDistinguishedNames.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class IssuingDistributionPoint\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for IssuingDistributionPoint class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"distributionPoint\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<GeneralName>|RelativeDistinguishedNames}\r\n\t\t\t * @description distributionPoint\r\n\t\t\t */\r\n\t\t\tthis.distributionPoint = getParametersValue(parameters, \"distributionPoint\", IssuingDistributionPoint.defaultValues(\"distributionPoint\"));\r\n\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @description onlyContainsUserCerts\r\n\t\t */\r\n\t\tthis.onlyContainsUserCerts = getParametersValue(parameters, \"onlyContainsUserCerts\", IssuingDistributionPoint.defaultValues(\"onlyContainsUserCerts\"));\r\n\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @description onlyContainsCACerts\r\n\t\t */\r\n\t\tthis.onlyContainsCACerts = getParametersValue(parameters, \"onlyContainsCACerts\", IssuingDistributionPoint.defaultValues(\"onlyContainsCACerts\"));\r\n\r\n\t\tif(\"onlySomeReasons\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number}\r\n\t\t\t * @description onlySomeReasons\r\n\t\t\t */\r\n\t\t\tthis.onlySomeReasons = getParametersValue(parameters, \"onlySomeReasons\", IssuingDistributionPoint.defaultValues(\"onlySomeReasons\"));\r\n\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @description indirectCRL\r\n\t\t */\r\n\t\tthis.indirectCRL = getParametersValue(parameters, \"indirectCRL\", IssuingDistributionPoint.defaultValues(\"indirectCRL\"));\r\n\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @description onlyContainsAttributeCerts\r\n\t\t */\r\n\t\tthis.onlyContainsAttributeCerts = getParametersValue(parameters, \"onlyContainsAttributeCerts\", IssuingDistributionPoint.defaultValues(\"onlyContainsAttributeCerts\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"distributionPoint\":\r\n\t\t\t\treturn [];\r\n\t\t\tcase \"onlyContainsUserCerts\":\r\n\t\t\t\treturn false;\r\n\t\t\tcase \"onlyContainsCACerts\":\r\n\t\t\t\treturn false;\r\n\t\t\tcase \"onlySomeReasons\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"indirectCRL\":\r\n\t\t\t\treturn false;\r\n\t\t\tcase \"onlyContainsAttributeCerts\":\r\n\t\t\t\treturn false;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for IssuingDistributionPoint class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t// IssuingDistributionPoint OID ::= 2.5.29.28\r\n\t\t//\r\n\t\t//IssuingDistributionPoint ::= SEQUENCE {\r\n\t\t//    distributionPoint          [0] DistributionPointName OPTIONAL,\r\n\t\t//    onlyContainsUserCerts      [1] BOOLEAN DEFAULT FALSE,\r\n\t\t//    onlyContainsCACerts        [2] BOOLEAN DEFAULT FALSE,\r\n\t\t//    onlySomeReasons            [3] ReasonFlags OPTIONAL,\r\n\t\t//    indirectCRL                [4] BOOLEAN DEFAULT FALSE,\r\n\t\t//    onlyContainsAttributeCerts [5] BOOLEAN DEFAULT FALSE }\r\n\t\t//\r\n\t\t//ReasonFlags ::= BIT STRING {\r\n\t\t//    unused                  (0),\r\n\t\t//    keyCompromise           (1),\r\n\t\t//    cACompromise            (2),\r\n\t\t//    affiliationChanged      (3),\r\n\t\t//    superseded              (4),\r\n\t\t//    cessationOfOperation    (5),\r\n\t\t//    certificateHold         (6),\r\n\t\t//    privilegeWithdrawn      (7),\r\n\t\t//    aACompromise            (8) }\r\n\t\t\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [distributionPoint]\r\n\t\t * @property {string} [distributionPointNames]\r\n\t\t * @property {string} [onlyContainsUserCerts]\r\n\t\t * @property {string} [onlyContainsCACerts]\r\n\t\t * @property {string} [onlySomeReasons]\r\n\t\t * @property {string} [indirectCRL]\r\n\t\t * @property {string} [onlyContainsAttributeCerts]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\t\t\tname: (names.distributionPoint || \"\"),\r\n\t\t\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\t\t\t\t\tname: (names.distributionPointNames || \"\"),\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: GeneralName.schema()\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\t\t\tname: (names.distributionPoint || \"\"),\r\n\t\t\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tvalue: RelativeDistinguishedNames.schema().valueBlock.value\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.onlyContainsUserCerts || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t}\r\n\t\t\t\t}), // IMPLICIT boolean value\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.onlyContainsCACerts || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t}\r\n\t\t\t\t}), // IMPLICIT boolean value\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.onlySomeReasons || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t\t}\r\n\t\t\t\t}), // IMPLICIT bitstring value\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.indirectCRL || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 4 // [4]\r\n\t\t\t\t\t}\r\n\t\t\t\t}), // IMPLICIT boolean value\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.onlyContainsAttributeCerts || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 5 // [5]\r\n\t\t\t\t\t}\r\n\t\t\t\t}) // IMPLICIT boolean value\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"distributionPoint\",\r\n\t\t\t\"distributionPointNames\",\r\n\t\t\t\"onlyContainsUserCerts\",\r\n\t\t\t\"onlyContainsCACerts\",\r\n\t\t\t\"onlySomeReasons\",\r\n\t\t\t\"indirectCRL\",\r\n\t\t\t\"onlyContainsAttributeCerts\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tIssuingDistributionPoint.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tdistributionPoint: \"distributionPoint\",\r\n\t\t\t\t\tdistributionPointNames: \"distributionPointNames\",\r\n\t\t\t\t\tonlyContainsUserCerts: \"onlyContainsUserCerts\",\r\n\t\t\t\t\tonlyContainsCACerts: \"onlyContainsCACerts\",\r\n\t\t\t\t\tonlySomeReasons: \"onlySomeReasons\",\r\n\t\t\t\t\tindirectCRL: \"indirectCRL\",\r\n\t\t\t\t\tonlyContainsAttributeCerts: \"onlyContainsAttributeCerts\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for IssuingDistributionPoint\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"distributionPoint\" in asn1.result)\r\n\t\t{\r\n\t\t\tswitch(true)\r\n\t\t\t{\r\n\t\t\t\tcase (asn1.result.distributionPoint.idBlock.tagNumber === 0): // GENERAL_NAMES variant\r\n\t\t\t\t\tthis.distributionPoint = Array.from(asn1.result.distributionPointNames, element => new GeneralName({ schema: element }));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (asn1.result.distributionPoint.idBlock.tagNumber === 1): // RDN variant\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.distributionPoint = new RelativeDistinguishedNames({\r\n\t\t\t\t\t\t\tschema: new asn1js.Sequence({\r\n\t\t\t\t\t\t\t\tvalue: asn1.result.distributionPoint.valueBlock.value\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"Unknown tagNumber for distributionPoint: {$asn1.result.distributionPoint.idBlock.tagNumber}\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(\"onlyContainsUserCerts\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst view = new Uint8Array(asn1.result.onlyContainsUserCerts.valueBlock.valueHex);\r\n\t\t\tthis.onlyContainsUserCerts = (view[0] !== 0x00);\r\n\t\t}\r\n\t\t\r\n\t\tif(\"onlyContainsCACerts\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst view = new Uint8Array(asn1.result.onlyContainsCACerts.valueBlock.valueHex);\r\n\t\t\tthis.onlyContainsCACerts = (view[0] !== 0x00);\r\n\t\t}\r\n\t\t\r\n\t\tif(\"onlySomeReasons\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst view = new Uint8Array(asn1.result.onlySomeReasons.valueBlock.valueHex);\r\n\t\t\tthis.onlySomeReasons = view[0];\r\n\t\t}\r\n\t\t\r\n\t\tif(\"indirectCRL\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst view = new Uint8Array(asn1.result.indirectCRL.valueBlock.valueHex);\r\n\t\t\tthis.indirectCRL = (view[0] !== 0x00);\r\n\t\t}\r\n\t\t\r\n\t\tif(\"onlyContainsAttributeCerts\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst view = new Uint8Array(asn1.result.onlyContainsAttributeCerts.valueBlock.valueHex);\r\n\t\t\tthis.onlyContainsAttributeCerts = (view[0] !== 0x00);\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"distributionPoint\" in this)\r\n\t\t{\r\n\t\t\tlet value;\r\n\t\t\t\r\n\t\t\tif(this.distributionPoint instanceof Array)\r\n\t\t\t{\r\n\t\t\t\tvalue = new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: Array.from(this.distributionPoint, element => element.toSchema())\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvalue = this.distributionPoint.toSchema();\r\n\t\t\t\t\r\n\t\t\t\tvalue.idBlock.tagClass = 3; // CONTEXT - SPECIFIC\r\n\t\t\t\tvalue.idBlock.tagNumber = 1; // [1]\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\toutputArray.push(value);\r\n\t\t}\r\n\t\t\r\n\t\tif(this.onlyContainsUserCerts !== IssuingDistributionPoint.defaultValues(\"onlyContainsUserCerts\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new Uint8Array([0xFF])).buffer\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.onlyContainsCACerts !== IssuingDistributionPoint.defaultValues(\"onlyContainsCACerts\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new Uint8Array([0xFF])).buffer\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"onlySomeReasons\" in this)\r\n\t\t{\r\n\t\t\tconst buffer = new ArrayBuffer(1);\r\n\t\t\tconst view = new Uint8Array(buffer);\r\n\t\t\t\r\n\t\t\tview[0] = this.onlySomeReasons;\r\n\t\t\t\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: buffer\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.indirectCRL !== IssuingDistributionPoint.defaultValues(\"indirectCRL\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 4 // [4]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new Uint8Array([0xFF])).buffer\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.onlyContainsAttributeCerts !== IssuingDistributionPoint.defaultValues(\"onlyContainsAttributeCerts\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 5 // [5]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new Uint8Array([0xFF])).buffer\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\t\t\r\n\t\tif(\"distributionPoint\" in this)\r\n\t\t{\r\n\t\t\tif(this.distributionPoint instanceof Array)\r\n\t\t\t\tobject.distributionPoint = Array.from(this.distributionPoint, element => element.toJSON());\r\n\t\t\telse\r\n\t\t\t\tobject.distributionPoint = this.distributionPoint.toJSON();\r\n\t\t}\r\n\t\t\r\n\t\tif(this.onlyContainsUserCerts !== IssuingDistributionPoint.defaultValues(\"onlyContainsUserCerts\"))\r\n\t\t\tobject.onlyContainsUserCerts = this.onlyContainsUserCerts;\r\n\t\t\r\n\t\tif(this.onlyContainsCACerts !== IssuingDistributionPoint.defaultValues(\"onlyContainsCACerts\"))\r\n\t\t\tobject.onlyContainsCACerts = this.onlyContainsCACerts;\r\n\t\t\r\n\t\tif(\"onlySomeReasons\" in this)\r\n\t\t\tobject.onlySomeReasons = this.onlySomeReasons;\r\n\t\t\r\n\t\tif(this.indirectCRL !== IssuingDistributionPoint.defaultValues(\"indirectCRL\"))\r\n\t\t\tobject.indirectCRL = this.indirectCRL;\r\n\t\t\r\n\t\tif(this.onlyContainsAttributeCerts !== IssuingDistributionPoint.defaultValues(\"onlyContainsAttributeCerts\"))\r\n\t\t\tobject.onlyContainsAttributeCerts = this.onlyContainsAttributeCerts;\r\n\t\t\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}