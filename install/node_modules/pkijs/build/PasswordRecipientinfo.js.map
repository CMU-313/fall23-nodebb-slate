{"version":3,"sources":["../src/PasswordRecipientinfo.js"],"names":["asn1js","PasswordRecipientinfo","constructor","parameters","version","defaultValues","keyDerivationAlgorithm","keyEncryptionAlgorithm","encryptedKey","password","fromSchema","schema","memberName","OctetString","ArrayBuffer","Error","compareWithDefault","memberValue","algorithmId","isEqual","byteLength","names","Sequence","name","blockName","value","Integer","Constructed","optional","idBlock","tagClass","tagNumber","valueBlock","asn1","compareSchema","verified","result","valueDec","toSchema","outputArray","push","toJSON"],"mappings":"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","file":"PasswordRecipientinfo.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, clearProps } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class PasswordRecipientinfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PasswordRecipientinfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @description version\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", PasswordRecipientinfo.defaultValues(\"version\"));\r\n\r\n\t\tif(\"keyDerivationAlgorithm\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {AlgorithmIdentifier}\r\n\t\t\t * @description keyDerivationAlgorithm\r\n\t\t\t */\r\n\t\t\tthis.keyDerivationAlgorithm = getParametersValue(parameters, \"keyDerivationAlgorithm\", PasswordRecipientinfo.defaultValues(\"keyDerivationAlgorithm\"));\r\n\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @description keyEncryptionAlgorithm\r\n\t\t */\r\n\t\tthis.keyEncryptionAlgorithm = getParametersValue(parameters, \"keyEncryptionAlgorithm\", PasswordRecipientinfo.defaultValues(\"keyEncryptionAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {OctetString}\r\n\t\t * @description encryptedKey\r\n\t\t */\r\n\t\tthis.encryptedKey = getParametersValue(parameters, \"encryptedKey\", PasswordRecipientinfo.defaultValues(\"encryptedKey\"));\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t * @description password Password to derive key from\r\n\t\t */\r\n\t\tthis.password = getParametersValue(parameters, \"password\", PasswordRecipientinfo.defaultValues(\"password\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn (-1);\r\n\t\t\tcase \"keyDerivationAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tcase \"keyEncryptionAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tcase \"encryptedKey\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"password\":\r\n\t\t\t\treturn new ArrayBuffer(0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PasswordRecipientinfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn (memberValue === (-1));\r\n\t\t\tcase \"keyDerivationAlgorithm\":\r\n\t\t\tcase \"keyEncryptionAlgorithm\":\r\n\t\t\t\treturn ((memberValue.algorithmId === \"\") && ((\"algorithmParams\" in memberValue) === false));\r\n\t\t\tcase \"encryptedKey\":\r\n\t\t\t\treturn (memberValue.isEqual(PasswordRecipientinfo.defaultValues(\"encryptedKey\")));\r\n\t\t\tcase \"password\":\r\n\t\t\t\treturn (memberValue.byteLength === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PasswordRecipientinfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//PasswordRecipientInfo ::= SEQUENCE {\r\n\t\t//    version CMSVersion,   -- Always set to 0\r\n\t\t//    keyDerivationAlgorithm [0] KeyDerivationAlgorithmIdentifier OPTIONAL,\r\n\t\t//    keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,\r\n\t\t//    encryptedKey EncryptedKey }\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [keyDerivationAlgorithm]\r\n\t\t * @property {string} [keyEncryptionAlgorithm]\r\n\t\t * @property {string} [encryptedKey]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: (names.version || \"\") }),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.keyDerivationAlgorithm || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: AlgorithmIdentifier.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tAlgorithmIdentifier.schema(names.keyEncryptionAlgorithm || {}),\r\n\t\t\t\tnew asn1js.OctetString({ name: (names.encryptedKey || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Clear input data first\r\n\t\tclearProps(schema, [\r\n\t\t\t\"version\",\r\n\t\t\t\"keyDerivationAlgorithm\",\r\n\t\t\t\"keyEncryptionAlgorithm\",\r\n\t\t\t\"encryptedKey\"\r\n\t\t]);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPasswordRecipientinfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tversion: \"version\",\r\n\t\t\t\t\tkeyDerivationAlgorithm: \"keyDerivationAlgorithm\",\r\n\t\t\t\t\tkeyEncryptionAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"keyEncryptionAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tencryptedKey: \"encryptedKey\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PasswordRecipientinfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.version = asn1.result.version.valueBlock.valueDec;\r\n\r\n\t\tif(\"keyDerivationAlgorithm\" in asn1.result)\r\n\t\t{\r\n\t\t\tthis.keyDerivationAlgorithm = new AlgorithmIdentifier({\r\n\t\t\t\tschema: new asn1js.Sequence({\r\n\t\t\t\t\tvalue: asn1.result.keyDerivationAlgorithm.valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.keyEncryptionAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.keyEncryptionAlgorithm });\r\n\t\tthis.encryptedKey = asn1.result.encryptedKey;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create output array for sequence\r\n\t\tconst outputArray = [];\r\n\r\n\t\toutputArray.push(new asn1js.Integer({ value: this.version }));\r\n\r\n\t\tif(\"keyDerivationAlgorithm\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: this.keyDerivationAlgorithm.toSchema().valueBlock.value\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\toutputArray.push(this.keyEncryptionAlgorithm.toSchema());\r\n\t\toutputArray.push(this.encryptedKey);\r\n\t\t//endregion\r\n\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tversion: this.version,\r\n\t\t\tkeyDerivationAlgorithm: this.keyDerivationAlgorithm.toJSON(),\r\n\t\t\tkeyEncryptionAlgorithm: this.keyEncryptionAlgorithm.toJSON(),\r\n\t\t\tencryptedKey: this.encryptedKey.toJSON()\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}