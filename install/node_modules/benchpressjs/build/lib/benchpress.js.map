{"version":3,"sources":["../../lib/benchpress.js"],"names":["Benchpress","module","exports","runtime","require","precompile","__express","evaluate","compileRender","compileParse","helpers","registerHelper","name","fn","escapeCharMap","replaceChar","c","escapeChars","str","String","toString","replace","cache","globals","setGlobal","key","value","assign","Object","jQuery","extend","addGlobals","data","flush","load","template","Promise","resolve","reject","promise","loader","templateFunction","then","render","block","try","blocks","parse","callback","console","warn","TypeError","output","setTimeout","err","error","registerLoader"],"mappings":"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","sourcesContent":["'use strict';\n\n/** @exports Benchpress */\nconst Benchpress = (typeof module === 'object' && module.exports) ? module.exports : {};\n\n/* build:SERVER-ONLY:open */\n\nconst runtime = require('./runtime');\nconst precompile = require('./precompile');\nconst __express = require('./express');\nconst evaluate = require('./evaluate');\nconst { compileRender, compileParse } = require('./compile-render');\n\nBenchpress.precompile = precompile;\nBenchpress.__express = __express;\nBenchpress.evaluate = evaluate;\nBenchpress.compileRender = compileRender;\nBenchpress.compileParse = compileParse;\n\n/* build:SERVER-ONLY:close */\n\nBenchpress.runtime = runtime;\n\nBenchpress.helpers = {};\n\n/**\n * Register a helper function\n * @param {string} name - Helper name\n * @param {function} fn - Helper function\n */\nBenchpress.registerHelper = function registerHelper(name, fn) {\n  Benchpress.helpers[name] = fn;\n};\n\n// add default escape function for escaping HTML entities\nconst escapeCharMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n  '=': '&#x3D;',\n};\nconst replaceChar = c => escapeCharMap[c];\nconst escapeChars = /[&<>\"'`=]/g;\n\nBenchpress.registerHelper('__escape', (str) => {\n  if (str == null) {\n    return '';\n  }\n  if (!str) {\n    return String(str);\n  }\n\n  return str.toString().replace(escapeChars, replaceChar);\n});\n\nBenchpress.cache = {};\n\nBenchpress.globals = {};\n\n/**\n * Set a global data value\n * @param {string} key - Property key\n * @param {Object} value - Property value\n */\nBenchpress.setGlobal = function setGlobal(key, value) {\n  Benchpress.globals[key] = value;\n};\n\nconst assign = Object.assign || jQuery.extend; // eslint-disable-line\n\n/**\n * @private\n */\nBenchpress.addGlobals = function addGlobals(data) {\n  return assign({}, Benchpress.globals, data);\n};\n\n/**\n * Clear the template cache\n */\nBenchpress.flush = function flush() {\n  Benchpress.cache = {};\n};\n\n// necessary to support both promises and callbacks\n// can remove when `parse` methods are removed\nfunction load(template) {\n  return new Promise((resolve, reject) => {\n    const promise = Benchpress.loader(template, (templateFunction) => {\n      resolve(templateFunction);\n    });\n\n    if (promise && promise.then) {\n      promise.then(resolve, reject);\n    }\n  });\n}\n\n/**\n * Fetch and run the given template\n * @param {string} template - Name of template to fetch\n * @param {Object} data - Data with which to run the template\n * @param {string} [block] - Parse only this block in the template\n * @returns {Promise<string>} - Rendered output\n */\nfunction render(template, data, block) {\n  data = Benchpress.addGlobals(data || {});\n\n  return Promise.try(() => {\n    Benchpress.cache[template] = Benchpress.cache[template] || load(template);\n    return Benchpress.cache[template];\n  }).then((templateFunction) => {\n    if (block) {\n      templateFunction = templateFunction.blocks && templateFunction.blocks[block];\n    }\n    if (!templateFunction) {\n      return '';\n    }\n\n    return runtime(Benchpress.helpers, data, templateFunction);\n  });\n}\n\n/**\n * Alias for {@link render}, but uses a callback\n * @param {string} template - Name of template to fetch\n * @param {string} [block] - Render only this block in the template\n * @param {Object} data - Data with which to run the template\n * @param {function} callback - callback(output)\n *\n * @deprecated - Use {@link render} instead\n */\nfunction parse(template, block, data, callback) {\n  // eslint-disable-next-line no-console\n  console.warn('Deprecated: Benchpress.parse is deprecated, to be removed in v3.0.0');\n\n  if (!callback && typeof block === 'object' && typeof data === 'function') {\n    callback = data;\n    data = block;\n    block = null;\n  }\n  if (typeof callback !== 'function') {\n    // Calling parse synchronously with no callback is discontinued\n    throw TypeError('Invalid Arguments: callback must be a function');\n  }\n  if (!template) {\n    callback('');\n    return;\n  }\n\n  render(template, data, block).then(\n    output => setTimeout(callback, 0, output),\n    err => console.error(err), // eslint-disable-line no-console\n  );\n}\n\nBenchpress.render = render;\nBenchpress.parse = parse;\n\n/**\n * Register a loader function to fetch templates\n * - `loader(name, callback) => callback(templateFunction)`\n * - `loader(name) => Promise<templateFunction>`\n * @param {function} loader\n */\nBenchpress.registerLoader = function registerLoader(loader) {\n  Benchpress.loader = loader;\n};\n"],"file":"benchpress.js"}