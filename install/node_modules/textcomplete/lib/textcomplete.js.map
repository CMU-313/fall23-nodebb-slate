{"version":3,"sources":["../src/textcomplete.js"],"names":["CALLBACK_METHODS","Textcomplete","editor","options","completer","isQueryInFlight","nextPendingQuery","dropdown","forEach","method","bind","startListening","destroyEditor","destroy","stopListening","deactivate","strategyPropsArray","registerStrategy","props","text","run","searchResults","length","render","getCursorOffset","trigger","e","detail","code","up","down","activeItem","getActiveItem","select","preventDefault","shown","beforeCursor","selectEvent","emit","defaultPrevented","applySearchResult","searchResult","on","handleMove","handleEnter","handleEsc","handleChange","handleSelect","eventName","handleHit","removeAllListeners","removeListener"],"mappings":"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","file":"textcomplete.js","sourcesContent":["// @flow\n\nimport Completer from \"./completer\"\nimport Editor from \"./editor\"\nimport Dropdown, { type DropdownOptions } from \"./dropdown\"\nimport Strategy, { type StrategyProperties } from \"./strategy\"\nimport SearchResult from \"./search_result\"\n\nimport EventEmitter from \"eventemitter3\"\n\nconst CALLBACK_METHODS = [\n  \"handleChange\",\n  \"handleEnter\",\n  \"handleEsc\",\n  \"handleHit\",\n  \"handleMove\",\n  \"handleSelect\",\n]\n\n/** @typedef */\ntype TextcompleteOptions = {\n  dropdown?: DropdownOptions,\n}\n\n/**\n * The core of textcomplete. It acts as a mediator.\n */\nexport default class Textcomplete extends EventEmitter {\n  dropdown: Dropdown\n  editor: Editor\n  options: TextcompleteOptions\n  completer: Completer\n  isQueryInFlight: boolean\n  nextPendingQuery: string | null\n\n  /**\n   * @param {Editor} editor - Where the textcomplete works on.\n   */\n  constructor(editor: Editor, options: TextcompleteOptions = {}) {\n    super()\n\n    this.completer = new Completer()\n    this.isQueryInFlight = false\n    this.nextPendingQuery = null\n    this.dropdown = new Dropdown(options.dropdown || {})\n    this.editor = editor\n    this.options = options\n\n    CALLBACK_METHODS.forEach(method => {\n      ;(this: any)[method] = (this: any)[method].bind(this)\n    })\n\n    this.startListening()\n  }\n\n  /**\n   * @return {this}\n   */\n  destroy(destroyEditor: boolean = true) {\n    this.completer.destroy()\n    this.dropdown.destroy()\n    if (destroyEditor) {\n      this.editor.destroy()\n    }\n    this.stopListening()\n    return this\n  }\n\n  /**\n   * @return {this}\n   */\n  hide() {\n    this.dropdown.deactivate()\n    return this\n  }\n\n  /**\n   * @return {this}\n   * @example\n   * textcomplete.register([{\n   *   match: /(^|\\s)(\\w+)$/,\n   *   search: function (term, callback) {\n   *     $.ajax({ ... })\n   *       .done(callback)\n   *       .fail([]);\n   *   },\n   *   replace: function (value) {\n   *     return '$1' + value + ' ';\n   *   }\n   * }]);\n   */\n  register(strategyPropsArray: StrategyProperties[]) {\n    strategyPropsArray.forEach(props => {\n      this.completer.registerStrategy(new Strategy(props))\n    })\n    return this\n  }\n\n  /**\n   * Start autocompleting.\n   *\n   * @param {string} text - Head to input cursor.\n   * @return {this}\n   */\n  trigger(text: string) {\n    if (this.isQueryInFlight) {\n      this.nextPendingQuery = text\n    } else {\n      this.isQueryInFlight = true\n      this.nextPendingQuery = null\n      this.completer.run(text)\n    }\n    return this\n  }\n\n  /** @private */\n  handleHit({ searchResults }: { searchResults: SearchResult[] }) {\n    if (searchResults.length) {\n      this.dropdown.render(searchResults, this.editor.getCursorOffset())\n    } else {\n      this.dropdown.deactivate()\n    }\n    this.isQueryInFlight = false\n    if (this.nextPendingQuery !== null) {\n      this.trigger(this.nextPendingQuery)\n    }\n  }\n\n  /** @private */\n  handleMove(e: CustomEvent) {\n    e.detail.code === \"UP\" ? this.dropdown.up(e) : this.dropdown.down(e)\n  }\n\n  /** @private */\n  handleEnter(e: CustomEvent) {\n    const activeItem = this.dropdown.getActiveItem()\n    if (activeItem) {\n      this.dropdown.select(activeItem)\n      e.preventDefault()\n    } else {\n      this.dropdown.deactivate()\n    }\n  }\n\n  /** @private */\n  handleEsc(e: CustomEvent) {\n    if (this.dropdown.shown) {\n      this.dropdown.deactivate()\n      e.preventDefault()\n    }\n  }\n\n  /** @private */\n  handleChange(e: CustomEvent) {\n    if (e.detail.beforeCursor != null) {\n      this.trigger(e.detail.beforeCursor)\n    } else {\n      this.dropdown.deactivate()\n    }\n  }\n\n  /** @private */\n  handleSelect(selectEvent: CustomEvent) {\n    this.emit(\"select\", selectEvent)\n    if (!selectEvent.defaultPrevented) {\n      this.editor.applySearchResult(selectEvent.detail.searchResult)\n    }\n  }\n\n  /** @private */\n  startListening() {\n    this.editor\n      .on(\"move\", this.handleMove)\n      .on(\"enter\", this.handleEnter)\n      .on(\"esc\", this.handleEsc)\n      .on(\"change\", this.handleChange)\n    this.dropdown.on(\"select\", this.handleSelect)\n    ;[\n      \"show\",\n      \"shown\",\n      \"render\",\n      \"rendered\",\n      \"selected\",\n      \"hidden\",\n      \"hide\",\n    ].forEach(eventName => {\n      this.dropdown.on(eventName, () => this.emit(eventName))\n    })\n    this.completer.on(\"hit\", this.handleHit)\n  }\n\n  /** @private */\n  stopListening() {\n    this.completer.removeAllListeners()\n    this.dropdown.removeAllListeners()\n    this.editor\n      .removeListener(\"move\", this.handleMove)\n      .removeListener(\"enter\", this.handleEnter)\n      .removeListener(\"esc\", this.handleEsc)\n      .removeListener(\"change\", this.handleChange)\n  }\n}\n"]}